{"version":3,"sources":["assets/receiveCopyIcon.svg","assets/linkIcon.svg","assets/robot.png","assets/hero-banner.png","assets/blockchain.png","assets/web3.png","assets/wallet.png","hooks/AuthContext.js","api/http.js","services/user.js","hooks/useAuth.js","pages/Login.js","components/PublicRoute.js","components/PrivateRoute.js","pages/Register.js","components/Navbar.js","components/utils/Title.js","services/wallet.js","services/price.js","hooks/useAllWallets.js","components/TotalBalance.js","components/utils/Chains.js","components/utils/Display.js","components/MyWallets.js","components/Home.js","pages/Wallets.js","hooks/useWithdraw.js","services/withdraw.js","services/transaction.js","components/CoinTransactions.js","hooks/getTransaction.js","pages/Wallet.js","hooks/useWalletInfo.js","hooks/useCoinPrice.js","hooks/useTransactions.js","hooks/createWallet.js","pages/welcometemplate.js","services/providerService.js","hooks/useProviders.js","components/ProviderCard.js","pages/List.js","components/ProviderFom.js","pages/Create.js","pages/Nextmain.js","components/verify-token.js","components/ChangePasswordComponent.js","components/TwoFactorAuthComponent.js","i18n.js","hooks/LanguageContext.js","components/LanguageSelectorComponent.js","components/UserProfileComponent.js","components/VerifyEmailComponent.js","components/Settings.js","components/ResendTokenForm.js","components/verify.js","components/Chat.js","components/ProviderChatComponent.js","App.js","hooks/useFindUser.js","index.js"],"names":["module","exports","AuthContext","createContext","axios","defaults","withCredentials","baseApi","loginApi","concat","logoutApi","registerApi","userInfoApi","updateUserProfileApi","changePasswordApi","verifyTokenApi","updateTokenStatusApi","resendTokenApi","verifyEmailApi","sendVerificationEmailApi","isEmailVerifiedApi","walletInfoApi","allWalletInfoApi","walletCreateApi","withdrawApi","transactionsApi","transactionApi","providerApi","createProviderApi","getAllProvidersApi","openChatApi","sendMessageApi","sendMessageAsProviderApi","async","get","url","body","params","post","User","patch","useAuth","history","useHistory","setAuth","useContext","error","setError","useState","successMessage","setSuccessMessage","setUserContext","data","getInfo","push","err","message","registerUser","register","loginUser","login","msg","logoutUser","logout","localStorage","clear","verifyToken","resendToken","changePassword","updateTokenStatus","updateUserProfile","updateProfile","_err$response","_err$response$data","response","verifyEmail","email","sendVerificationEmail","isEmailVerified","isVerified","Login","openSnackbar","setOpenSnackbar","password","setPassword","showPassword","setShowPassword","loading","setLoading","isMounted","useRef","handleCloseSnackbar","useEffect","current","React","createElement","Box","sx","marginTop","display","flexDirection","alignItems","width","maxWidth","padding","borderRadius","boxShadow","bgcolor","position","overflow","animation","m","height","clipPath","justifyContent","ArrowDropDownIcon","color","fontSize","Typography","component","variant","mt","onSubmit","event","preventDefault","Object","fromEntries","FormData","currentTarget","setItem","Promise","resolve","setTimeout","responseMessage","e","noValidate","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","helperText","InputProps","border","InputLabelProps","shrink","type","value","onChange","target","endAdornment","InputAdornment","IconButton","aria-label","onClick","VisibilityOff","Visibility","Button","mb","disabled","CircularProgress","size","ml","Grid","container","direction","item","Link","href","fontWeight","textDecoration","Snackbar","open","autoHideDuration","onClose","Alert","severity","PublicRoute","props","auth","Component","rest","_objectWithoutProperties","_excluded","Fragment","Redirect","to","Route","assign","render","PrivateRoute","Register","confirmPassword","setConfirmPassword","showConfirmPassword","setShowConfirmPassword","spacing","xs","AppBar","styled","MuiAppBar","_ref","theme","_objectSpread","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","navLinksStyle","mx","navLinkIconStyle","mr","navLinkItemStyle","py","px","DashboardContent","anchorElUser","setAnchorElUser","drawerOpen","setDrawerOpen","useTheme","isMobile","useMediaQuery","breakpoints","down","handleClickUserMenu","stopPropagation","action","innerHTML","window","location","reload","settings","firstName","icon","WalletIcon","SettingsIcon","LogoutIcon","navItems","Icon","SupportAgentIcon","QrCodeIcon","Toolbar","pr","edge","left","MenuIcon","flexGrow","Drawer","anchor","backgroundColor","paddingTop","role","onKeyDown","List","map","_ref3","ListItem","button","key","ListItemText","primary","Divider","_ref4","_ref2","startsWith","undefined","Tooltip","title","p","Avatar","colors","charCodeAt","length","getAvatarColor","charAt","Menu","anchorEl","Boolean","handleCloseUserMenu","_ref5","MenuItem","textAlign","Navbar","Title","gutterBottom","children","Wallet","walletId","coin","chainId","toUpperCase","useAllWallets","allWalletInfo","setAllWalletInfo","walletBalance","setWalletBalance","getAllWalletInfo","info","balance","i","wallet","Price","getPrice","parseFloat","USD","getTotalBalance","TotalBalance","t","useTranslation","toFixed","getNetworkName","getNetWorkList","find","network","getCoinLogo","bnb","avax","eth","matic","ftm","op","toLowerCase","networks","abbr","explorerBase","filter","getDefaultNetworkId","getNetworkExplorerBase","getCoinFee","getCoinDecimalsPlace","getDisplayableAddress","address","slice","getStatusName","code","0","1","2","3","4","MyWallets","isSmallScreen","marginBottom","Paper","palette","background","paper","src","alt","underline","style","overflowX","sm","md","lg","minHeight","Dashboard","texts","textIndex","setTextIndex","visibleText","setVisibleText","fadeOut","setFadeOut","displayDuration","timeout1","timeout2","prev","clearTimeout","textShadow","lastName","opacity","flexWrap","link","index","minWidth","Wallets","selectedCoin","setSelectedCoin","handleCreateWallet","robotImage","marginRight","FormControl","InputLabel","Select","labelId","gap","handleBack","my","align","useWithdraw","withdraw","amount","account","process","Transaction","transactionId","CoinTransactions","transactions","interval","copied","setCopied","txCopied","setTxCopied","openDialog","setOpenDialog","selectedTransaction","setSelectedTransaction","handleClose","clearInterval","monitorTransaction","transaction","setInterval","_transaction","getTransaction","status","handleOpen","getRealDate","date","replace","TableContainer","maxHeight","Table","TableHead","TableRow","TableCell","TableBody","cursor","txHash","nature","confirmations","created_at","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Math","abs","LinkIcon","CopyToClipboard","text","onCopy","TransitionComponent","Zoom","CopyIcon","DialogActions","withdrawAmount","setWithdrawAmount","withdrawAddress","setWithdrawAddress","useParams","defaultNetworkId","walletInfo","isWalletLoading","setWalletInfo","isInfoLoading","getWalletInfo","useWalletInfo","coinPrice","setCoinPrice","getCoinPrice","useCoinPrice","getTransactions","setTransactions","useCallback","getCoinTransactions","getAllTransactions","useTransitions","resetWithdrawFields","Card","CardHeader","CardContent","truncateToDecimals","num","dec","calcDec","pow","trunc","Stack","readOnly","QRCode","placeholder","setMaxAmount","fee","coinAndChain","created","createWallet","StyledContainer","Container","StyledBox","shape","StyledButton","textTransform","WelcomeTemplate","fontFamily","letterSpacing","lineHeight","ProviderService","findProviderByEmailApi","userEmail","providerEmail","senderEmail","chatId","messageContent","getMessagesApi","useProviders","providers","setProviders","messages","setMessages","getAllProviders","fetchProviders","findProviderByEmail","Error","openChat","console","log","JSON","stringify","sendMessage","sendMessageAsProvider","getChatDetailsByEmail","getMessages","createProvider","createTheme","typography","h6","body2","main","secondary","default","components","MuiCard","styleOverrides","root","transform","MuiButton","MuiTextField","MuiDialog","ProviderCard","provider","setOpen","paymentMethod","setPaymentMethod","cryptoCoin","setCryptoCoin","fetchUserEmail","ThemeProvider","BadgeIcon","CheckCircleIcon","EmailIcon","LocationOnIcon","streetName","city","handleClickOpen","ProvidersList","MonetizationOnIcon","idNumber","ProviderForm","providerData","setProviderData","postalCode","file","setFile","fileUploaded","setFileUploaded","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","errors","setErrors","emailError","streetNameError","firstNameError","lastNameError","idNumberError","cityError","postalCodeError","checkProvider","handleChange","prevData","prevErrors","validateField","test","trim","elevation","values","includes","formData","keys","forEach","append","PersonIcon","PhotoCameraIcon","field","alpha","top","startAdornment","accept","selectedFile","files","htmlFor","right","jsx","global","CreateProvider","PersonAddIcon","pairs","logo","RecentActorsIcon","ContactMailIcon","Nextmain","mobileOpen","setMobileOpen","handleDrawerToggle","RouterLink","verticalAlign","borderColor","boxSizing","flexShrink","heroBanner","fontStyle","scrollBehavior","className","pair","objectFit","web3Img","backdropFilter","require","blockchainImg","content","details","card","frameBorder","scrolling","allow","rel","TwitterIcon","FacebookIcon","LinkedInIcon","Date","getFullYear","VerifyToken","formValues","setFormValues","token","localError","setLocalError","storedEmail","getItem","handleResend","RefreshIcon","ChangePasswordComponent","passwords","setPasswords","currentPassword","newPassword","confirmNewPassword","showPasswords","setShowPasswords","LockIcon","handleTogglePasswordVisibility","alert","TwoFactorAuthComponent","isTokenEnabled","setIsTokenEnabled","showWarning","setShowWarning","confirmDialogOpen","setConfirmDialogOpen","snackbar","setSnackbar","fetchTokenStatus","updateTokenStatusAndLocalStorage","newStatus","handleConfirmDialogClose","confirm","timer","FormControlLabel","control","Switch","checked","toggleTwoFactorAuth","WarningIcon","PaperProps","anchorOrigin","vertical","horizontal","MuiAlert","i18n","use","initReactI18next","init","resources","en","translation","total_balance","language_selection","language","view_details","welcome","deposit","security","my_wallets","account_security","crypto_potential","p2p_service","blockchain_revolution","password_security","crypto_wallet_services","p2p_exchange_service","account_security_message","crypto_potential_message","p2p_service_message","blockchain_revolution_message","password_security_message","crypto_wallet_services_message","p2p_exchange_service_message","total_balance_title","total_balance_amount","wallets_link_text","p2p_service_wallets","rpc_description","password_security_wallets","evm_wallet_description","deposit_button","withdraw_button","back_button","your_wallets_title","insufficient_funds","address_copied","copy","deposits","withdrawals","amount_to_withdraw","commission","create_wallet","address_placeholder","your_address","user_profile","change_password","two_factor_auth","language_selector","verify_email","settings_title","go_back","es","lng","fallbackLng","interpolation","escapeValue","LanguageContext","LanguageProvider","setLanguage","savedLanguage","changeLanguage","Provider","handleLanguageChange","LanguageSelectorComponent","newLanguage","entries","CheckIcon","Chip","UserProfileComponent","setFirstName","setLastName","setEmail","localSuccessMessage","setLocalSuccessMessage","VerifyEmailComponent","verificationStatus","setVerificationStatus","emailVerified","setEmailVerified","hasCheckedVerification","setHasCheckedVerification","sending","setSending","verified","checkEmailVerification","sections","SecurityIcon","LanguageIcon","Settings","selectedSection","setSelectedSection","grey","selected","light","ListItemIcon","textOverflow","whiteSpace","ArrowBackIcon","renderSection","ResendTokenForm","EmailVerificationComponent","dialogMessage","setDialogMessage","showCloseMessage","setShowCloseMessage","handleVerificationResult","result","handleVerifyClick","handleCloseDialog","ChatComponent","setMessageContent","setChatId","chatData","parse","chat","fetchMessages","handleSendMessage","sender","onKeyPress","ProviderChatComponent","fetchError","setFetchError","chatDetails","fetchChatDetails","intervalId","App","findUser","useFindUser","mdTheme","Router","CssBaseline","mode","exact","path","Home","Chatcomponent","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72ae477.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/receiveCopyIcon.7c4db96a.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkIcon.d00f103c.svg\";","module.exports = __webpack_public_path__ + \"static/media/robot.e1542e5c.png\";","module.exports = __webpack_public_path__ + \"static/media/hero-banner.ecae9107.png\";","module.exports = __webpack_public_path__ + \"static/media/blockchain.5b1c39e6.png\";","module.exports = __webpack_public_path__ + \"static/media/web3.9848590d.png\";","module.exports = __webpack_public_path__ + \"static/media/wallet.a0b69bac.png\";","import { createContext } from 'react'\r\nexport const AuthContext = createContext(null)","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\n\r\nconst baseApi = 'http://192.168.100.4:4000/secure/api'\r\n\r\n// Endpoints usuario\r\nconst loginApi = `${baseApi}/user/login`\r\nconst logoutApi = `${baseApi}/user/logout`\r\nconst registerApi = `${baseApi}/user/register`\r\nconst userInfoApi = `${baseApi}/user/info`\r\nconst updateUserProfileApi = `${baseApi}/user/update-profile`\r\nconst changePasswordApi = `${baseApi}/user/change-password`;\r\nconst verifyTokenApi = `${baseApi}/user/verify-token`;\r\nconst updateTokenStatusApi = `${baseApi}/user/update-token-status`;\r\nconst resendTokenApi = `${baseApi}/user/resend-token`\r\nconst verifyEmailApi = `${baseApi}/user/verify-email`;\r\nconst sendVerificationEmailApi = `${baseApi}/user/send-verification-email`;\r\nconst isEmailVerifiedApi = `${baseApi}/user/is-email-verified`;\r\n\r\n// Endpoints wallet\r\nconst walletInfoApi = `${baseApi}/wallet/info`\r\nconst allWalletInfoApi = `${baseApi}/wallet/all`\r\nconst walletCreateApi = `${baseApi}/wallet/create`\r\nconst withdrawApi = `${baseApi}/wallet/withdraw`\r\n\r\n// Endpoints transacción\r\nconst transactionsApi = `${baseApi}/transaction/all`\r\nconst transactionApi = `${baseApi}/transaction/info`\r\n\r\n// Endpoints provider\r\nconst providerApi = `${baseApi}/provider`;\r\nconst createProviderApi = `${providerApi}/create`;\r\nconst getAllProvidersApi = `${providerApi}/all`;\r\nconst findProviderByEmailApi = (email) => `${providerApi}/find/${email}`;\r\nconst openChatApi = `${providerApi}/chat/open`;\r\nconst sendMessageApi = `${providerApi}/chat/send`;\r\nconst getMessagesApi = (chatId) => `${providerApi}/chat/messages/${chatId}`;\r\nconst sendMessageAsProviderApi = `${providerApi}/chat/send-as-provider`;\r\nconst getChatDetailsByEmailApi = (email) => `${providerApi}/chat/details-by-email/${email}`;\r\n\r\nconst priceApi = 'https://min-api.cryptocompare.com/data/price?tsyms=USD&fsym='\r\n\r\nasync function get(url, body) {\r\n    return await axios.get(url, {\r\n        params: body || {}\r\n    })\r\n}\r\n\r\nasync function post(url, body) {\r\n    return await axios.post(url, body)\r\n}\r\n\r\nasync function patch(url, body) {\r\n    return await axios.patch(url, body)\r\n}\r\n\r\nexport {\r\n    get,\r\n    post,\r\n    patch,\r\n    priceApi,\r\n    loginApi,\r\n    logoutApi,\r\n    registerApi,\r\n    userInfoApi,\r\n    withdrawApi,\r\n    walletInfoApi,\r\n    walletCreateApi,\r\n    transactionsApi,\r\n    allWalletInfoApi,\r\n    transactionApi,\r\n    providerApi,\r\n    createProviderApi,\r\n    getAllProvidersApi,\r\n    findProviderByEmailApi,\r\n    openChatApi,\r\n    sendMessageApi,\r\n    getMessagesApi,\r\n    verifyTokenApi,\r\n    changePasswordApi,\r\n    updateTokenStatusApi,\r\n    resendTokenApi,\r\n    updateUserProfileApi,\r\n    verifyEmailApi,\r\n    sendVerificationEmailApi,\r\n    isEmailVerifiedApi,\r\n    sendMessageAsProviderApi,\r\n    getChatDetailsByEmailApi,\r\n};","import {\r\n    get,\r\n    post,\r\n    patch,\r\n    registerApi,\r\n    loginApi,\r\n    logoutApi,\r\n    userInfoApi,\r\n    verifyTokenApi,\r\n    changePasswordApi,\r\n    updateTokenStatusApi,\r\n    resendTokenApi,\r\n    updateUserProfileApi,\r\n    sendVerificationEmailApi,\r\n    verifyEmailApi,\r\n    isEmailVerifiedApi\r\n    \r\n} from '../api/http';\r\n\r\nexport default class User {\r\n    static async register(body) {\r\n        return await post(registerApi, body);\r\n    }\r\n\r\n    static async login(body) {\r\n        return await post(loginApi, body);\r\n    }\r\n\r\n    static async verifyToken(body) {\r\n        return await post(verifyTokenApi, body);\r\n    }\r\n\r\n    static async logout() {\r\n        return await post(logoutApi, {});\r\n    }\r\n\r\n    static async getInfo() {\r\n        return await get(userInfoApi, {});\r\n    }\r\n\r\n    static async changePassword(body) {\r\n        return await post(changePasswordApi, body);\r\n    }\r\n\r\n    static async updateTokenStatus(body) { \r\n        return await patch(updateTokenStatusApi, body);\r\n    }\r\n\r\n    static async resendToken(body) {\r\n        return await post(resendTokenApi, body);\r\n    }\r\n\r\n    static async updateProfile(body) {\r\n        return await post(updateUserProfileApi, body);\r\n    }\r\n\r\n    static async verifyEmail(body) {\r\n        return await post(verifyEmailApi, body);\r\n    }\r\n\r\n    static async sendVerificationEmail(body) {\r\n        return await post(sendVerificationEmailApi, body);\r\n    }\r\n\r\n    static async isEmailVerified(body) {\r\n        return await get(isEmailVerifiedApi, body);\r\n    }\r\n    \r\n}\r\n","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from './AuthContext';\r\nimport User from '../services/user';\r\n\r\nexport default function useAuth() {\r\n    let history = useHistory();\r\n    const { setAuth } = useContext(AuthContext);\r\n    const [error, setError] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n    const setUserContext = async () => {\r\n        try {\r\n            const { data } = await User.getInfo();\r\n            if (data && 'data' in data) {\r\n                setAuth(data.data);\r\n                history.push('/');\r\n            } else {\r\n                setError(data.error);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const logoutUser = async () => {\r\n        try {\r\n            await User.logout();\r\n            localStorage.clear();\r\n            history.push('/login');\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const registerUser = async (body) => {\r\n        try {\r\n            const { data } = await User.register(body);\r\n            if (data) {\r\n                history.push('/login');\r\n            } else {\r\n                setError(data.error);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const loginUser = async (body) => {\r\n        try {\r\n            const { data } = await User.login(body);\r\n            if (data && 'msg' in data) {\r\n                if (data.msg === 'Código de verificación enviado a tu correo electrónico.') {\r\n                    history.push('/verifytoken');\r\n                } else if (data.msg === 'Logged in!') {\r\n                    await setUserContext();\r\n                } else {\r\n                    setError(data.error);\r\n                }\r\n            } else {\r\n                setError('Credenciales incorrectas.');\r\n            }\r\n        } catch (err) {\r\n            setError('Credenciales incorrectas.');\r\n        }\r\n    };\r\n\r\n    const verifyToken = async (body) => {\r\n        try {\r\n            const { data } = await User.verifyToken(body);\r\n            if (data && data.msg === 'Logged in!') {\r\n                await setUserContext();\r\n            } else if (data && data.msg === 'Código de verificación enviado a tu correo electrónico.') {\r\n                return data;\r\n            } else {\r\n                setError(data.error || 'Código de verificación inválido.');\r\n            }\r\n        } catch (err) {\r\n            setError('Token incorrecto verifica tu correo electrónico.');\r\n        }\r\n    };\r\n\r\n    const resendToken = async (body) => {\r\n        try {\r\n            const { data } = await User.resendToken(body);\r\n            if (data && data.message === 'Código de verificación reenviado a tu correo electrónico.') {\r\n                setSuccessMessage(data.message);\r\n            } else {\r\n                setError(data.error || 'Error al reenviar el código de verificación.');\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const changePassword = async (body) => {\r\n        try {\r\n            const { data } = await User.changePassword(body);\r\n            if (data && data.message === 'Contraseña actualizada con éxito') {\r\n                setSuccessMessage('Contraseña actualizada con éxito');\r\n            } else {\r\n                setError(data.error || 'Error al cambiar la contraseña.');\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const updateTokenStatus = async (body) => {\r\n        try {\r\n            const { data } = await User.updateTokenStatus(body);\r\n            if (data && data.msg === 'Seguridad de la cuenta actualizada con éxito.') {\r\n                setSuccessMessage('Seguridad de la cuenta actualizada con éxito.');\r\n            } else {\r\n                setError(data.error || 'Error al actualizar el estado de seguridad.');\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const updateUserProfile = async (body) => {\r\n        try {\r\n            const { data } = await User.updateProfile(body);\r\n            if (data && data.message === 'Perfil actualizado con éxito') {\r\n                setSuccessMessage(data.message);\r\n            } else {\r\n                setError(data.error || 'Error al actualizar el perfil.');\r\n            }\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || err.message);\r\n        }\r\n    };\r\n\r\n    const verifyEmail = async (email) => {\r\n        try {\r\n            const { data } = await User.verifyEmail({ email });\r\n            if (data && data.message === 'Correo electrónico verificado con éxito.') {\r\n                setSuccessMessage(data.message);\r\n            } else {\r\n                setError(data.error || 'Error: el correo ya está verificado.');\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n    \r\n    const sendVerificationEmail = async (email) => {\r\n        try {\r\n            const { data } = await User.sendVerificationEmail({ email });\r\n            if (data && data.message === 'Correo de verificación enviado con éxito.') {\r\n                setSuccessMessage(data.message);\r\n            } else {\r\n                setError(data.error || 'Error al enviar el correo de verificación.');\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n    \r\n    const isEmailVerified = async () => {\r\n        try {\r\n            const { data } = await User.isEmailVerified(); \r\n            if (data && data.isVerified) {\r\n                return true; \r\n            } else {\r\n                return false; \r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n            return false; \r\n        }\r\n    };\r\n    \r\n\r\n    return {\r\n        registerUser,\r\n        loginUser,\r\n        logoutUser,\r\n        verifyToken,\r\n        resendToken, \r\n        changePassword,\r\n        updateTokenStatus,\r\n        updateUserProfile,\r\n        verifyEmail,          \r\n        sendVerificationEmail,\r\n        isEmailVerified,\r\n        error,\r\n        successMessage\r\n    };\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Typography, Box, Button, TextField, Grid, Link, Snackbar, Alert, IconButton, InputAdornment, CircularProgress } from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useAuth from './../hooks/useAuth';\r\n\r\nexport default function Login() {\r\n    const { loginUser, error } = useAuth();\r\n    const history = useHistory();\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const isMounted = useRef(true);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const data = Object.fromEntries(new FormData(event.currentTarget));\r\n        \r\n        localStorage.setItem('email', data.email);\r\n\r\n        setLoading(true); \r\n\r\n        try {\r\n            await new Promise((resolve) => setTimeout(resolve, 2000));\r\n            const responseMessage = await loginUser(data);\r\n            if (isMounted.current) {\r\n                if (responseMessage && responseMessage.msg === 'Código de verificación enviado a tu correo electrónico.') {\r\n                    history.push('/verifytoken');\r\n                } else if (responseMessage && responseMessage.msg === 'Logged in!') {\r\n                    history.push('/');\r\n                } else {\r\n                    setOpenSnackbar(true);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            if (isMounted.current) {\r\n                setOpenSnackbar(true);\r\n            }\r\n        } finally {\r\n            if (isMounted.current) {\r\n                setLoading(false); \r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                width: '100%',\r\n            }}\r\n        >\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    maxWidth: '500px',\r\n                    padding: 3,\r\n                    borderRadius: 2,\r\n                    boxShadow: '0 0 25px rgba(0, 123, 255, 0.6)', \r\n                    bgcolor: 'white',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    animation: 'glow 1.5s infinite alternate', \r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        m: 1,\r\n                        width: 45,\r\n                        height: 50,\r\n                        clipPath: 'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)',\r\n                        bgcolor: '#2186EB',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                    }}\r\n                >\r\n                     <ArrowDropDownIcon sx={{ color: 'white', fontSize: 50 }} />\r\n                </Box>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                   BlockVault\r\n                </Typography>\r\n                <Box\r\n                    sx={{\r\n                        width: '100%',\r\n                        mt: 3,\r\n                    }}\r\n                    component=\"form\"\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                >\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Correo electrónico\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        error={!!error}\r\n                        helperText={error ? error : ''}\r\n                        InputProps={{\r\n                            sx: {\r\n                                borderRadius: 2,  \r\n                                border: '1px solid #ddd', \r\n                            },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            shrink: true, \r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Contraseña\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        error={!!error}\r\n                        helperText={error ? error : ''}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={() => setShowPassword(!showPassword)}\r\n                                    >\r\n                                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                            sx: {\r\n                                borderRadius: 2,  \r\n                                border: '1px solid #ddd',  \r\n                            },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            shrink: true, \r\n                        }}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            mt: 3,\r\n                            mb: 2,\r\n                            color: 'white',\r\n                            bgcolor: '#326DEB',\r\n                            '&:hover': {\r\n                                bgcolor: '#326DEB',\r\n                            },\r\n                        }}\r\n                        disabled={loading} \r\n                    >\r\n                        {loading ? (\r\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                <CircularProgress size={20} sx={{ color: '#074EE7FF' }} />\r\n                                <Typography sx={{ ml: 1, color: '#074EE7FF', fontSize: '0.875rem' }}>Iniciando sesión...</Typography>\r\n                                </Box>\r\n                                ) : (\r\n                                'Iniciar sesión'\r\n                                )}\r\n\r\n                    </Button>\r\n                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Link\r\n                                href=\"/register\"\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                    mt: 2,\r\n                                    fontSize: '0.875rem',\r\n                                    color: '#326DEB',\r\n                                    fontWeight: 600,\r\n                                    textDecoration: 'none',\r\n                                    '&:hover': {\r\n                                        textDecoration: 'underline',\r\n                                        color: '#1E5BB5',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                No tienes una cuenta? Regístrate\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link\r\n                                href=\"/forgot-password\" \r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                    mt: 1,\r\n                                    fontSize: '0.875rem',\r\n                                    color: '#326DEB',\r\n                                    fontWeight: 600,\r\n                                    textDecoration: 'none',\r\n                                    '&:hover': {\r\n                                        textDecoration: 'underline',\r\n                                        color: '#1E5BB5',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                Olvidé mi contraseña\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n                    <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\r\n                        {error || 'Ha ocurrido un error al iniciar sesión.'}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\n\r\nexport default function PublicRoute(props) {\r\n    const { auth, loading } = useContext(AuthContext);\r\n    const { component: Component, ...rest } = props;\r\n\r\n    if (loading) {\r\n        return <></>\r\n    }\r\n\r\n    if (!auth) {\r\n        return (<Route {...rest} render={(props) =>\r\n            (<Component {...props} />)\r\n        }\r\n        />\r\n        )\r\n    }\r\n\r\n    return <Redirect to='/' />\r\n}","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\n\r\nexport default function PrivateRoute(props) {\r\n    const { auth, loading } = useContext(AuthContext);\r\n    const { component: Component, ...rest } = props;\r\n\r\n    if (loading) {\r\n        return <></>\r\n    }\r\n\r\n    if (auth) {\r\n        return (<Route {...rest} render={(props) =>\r\n            (<Component {...props} />)\r\n        }\r\n        />\r\n        )\r\n    }\r\n\r\n    return <Redirect to='/login' />\r\n}","import React from 'react';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    Button,\r\n    TextField,\r\n    Grid,\r\n    Link,\r\n    Snackbar,\r\n    Alert,\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport useAuth from './../hooks/useAuth';\r\n\r\nexport default function Register() {\r\n    const { registerUser, error } = useAuth();\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const [password, setPassword] = React.useState('');\r\n    const [confirmPassword, setConfirmPassword] = React.useState('');\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = React.useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setOpenSnackbar(true);\r\n            return;\r\n        }\r\n        const data = Object.fromEntries(new FormData(event.currentTarget));\r\n        try {\r\n            await registerUser(data);\r\n        } catch (e) {\r\n            setOpenSnackbar(true);\r\n        }\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                width: '100%',\r\n            }}\r\n        >\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    maxWidth: '500px',\r\n                    padding: 3,\r\n                    borderRadius: 2,\r\n                    boxShadow: '0 0 25px rgba(0, 123, 255, 0.6)', \r\n                    bgcolor: 'white',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    animation: 'glow 1.5s infinite alternate', \r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        m: 1,\r\n                        width: 45,\r\n                        height: 50,\r\n                        clipPath: 'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)',\r\n                        bgcolor: '#2186EB',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                    }}\r\n                >\r\n                    <ArrowDropDownIcon sx={{ color: 'white', fontSize: 50 }} />\r\n                </Box>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    BlockVault\r\n                </Typography>\r\n                <Box\r\n                    sx={{\r\n                        width: '100%',\r\n                        mt: 3,\r\n                    }}\r\n                    component=\"form\"\r\n                    noValidate\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"given-name\"\r\n                                name=\"firstName\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"Nombre\"\r\n                                autoFocus\r\n                                error={!!error}\r\n                                helperText={error ? error : ''}\r\n                                InputProps={{\r\n                                    sx: {\r\n                                        borderRadius: 2, \r\n                                        border: '1px solid #ddd',  \r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Apellidos\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"family-name\"\r\n                                error={!!error}\r\n                                helperText={error ? error : ''}\r\n                                InputProps={{\r\n                                    sx: {\r\n                                        borderRadius: 2,  \r\n                                        border: '1px solid #ddd',  \r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Correo electrónico\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                error={!!error}\r\n                                helperText={error ? error : ''}\r\n                                InputProps={{\r\n                                    sx: {\r\n                                        borderRadius: 2,  \r\n                                        border: '1px solid #ddd', \r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Contraseña\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                id=\"password\"\r\n                                autoComplete=\"new-password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                error={!!error}\r\n                                helperText={error ? error : ''}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                            >\r\n                                                {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                    sx: {\r\n                                        borderRadius: 2,  \r\n                                        border: '1px solid #ddd',  \r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirmar contraseña\"\r\n                                type={showConfirmPassword ? 'text' : 'password'}\r\n                                id=\"confirmPassword\"\r\n                                autoComplete=\"new-password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                error={password !== confirmPassword}\r\n                                helperText={password !== confirmPassword ? 'Las contraseñas no coinciden' : ''}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"toggle confirm password visibility\"\r\n                                                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                            >\r\n                                                {showConfirmPassword ? <VisibilityOff /> : <Visibility />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                    sx: {\r\n                                        borderRadius: 2, \r\n                                        border: '1px solid #ddd',  \r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            mt: 3,\r\n                            mb: 2,\r\n                            color: 'white',\r\n                            bgcolor: '#326DEB', \r\n                            '&:hover': {\r\n                                bgcolor: '#326DEB', \r\n                            },\r\n                        }}\r\n                    >\r\n                        Registrarse\r\n                    </Button>\r\n                    <Grid container justifyContent=\"center\">\r\n                        <Grid item>\r\n                            <Link\r\n                                href=\"/login\"\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                    mt: 2,\r\n                                    fontSize: '0.875rem',\r\n                                    color: '#326DEB',\r\n                                    fontWeight: 600,\r\n                                    textDecoration: 'none',\r\n                                    '&:hover': {\r\n                                        textDecoration: 'underline',\r\n                                        color: '#1E5BB5',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                ¿Ya tienes una cuenta? Inicia sesión\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n                    <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\r\n                        {error || 'Ha ocurrido un error al registrarse.'}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n    AppBar as MuiAppBar,\r\n    Toolbar,\r\n    Box,\r\n    Typography,\r\n    IconButton,\r\n    Link,\r\n    MenuItem,\r\n    Menu,\r\n    Avatar,\r\n    Tooltip,\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n    useMediaQuery,\r\n    useTheme,\r\n} from '@mui/material';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    ArrowDropDown as ArrowDropDownIcon,\r\n    SupportAgent as SupportAgentIcon,\r\n    QrCode as QrCodeIcon,\r\n    Menu as MenuIcon,\r\n    AccountBalanceWallet as WalletIcon,\r\n    Settings as SettingsIcon,\r\n    ExitToApp as LogoutIcon,\r\n} from '@mui/icons-material';\r\nimport useAuth from '../hooks/useAuth';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar)(({ theme, open }) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst navLinksStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    mx: 2,\r\n    '&:hover': {\r\n        textDecoration: 'underline',\r\n    },\r\n};\r\n\r\nconst navLinkIconStyle = {\r\n    mr: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n};\r\n\r\nconst navLinkItemStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    py: 1,\r\n    px: 2,\r\n};\r\n\r\nfunction DashboardContent() {\r\n    const { auth } = useContext(AuthContext);\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n    const { logoutUser } = useAuth();\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const handleCloseUserMenu = () => setAnchorElUser(null);\r\n    const handleOpenUserMenu = (event) => setAnchorElUser(event.currentTarget);\r\n\r\n    const handleClickUserMenu = async (e) => {\r\n        e.stopPropagation();\r\n        const action = e.target.innerHTML;\r\n        if (action === 'Logout') {\r\n            await logoutUser();\r\n            window.location.reload();\r\n        } else if (action === 'Mis billeteras') {\r\n            history.push('/wallets');\r\n        } else if (action === 'Settings') {\r\n            history.push('/settings');\r\n        }\r\n        setAnchorElUser(null);\r\n        setDrawerOpen(false); \r\n    };\r\n\r\n    const getAvatarColor = (name) => {\r\n        const colors = ['#F6851B', '#3C3C3B', '#E8E8E8'];\r\n        return colors[name.charCodeAt(0) % colors.length];\r\n    };\r\n\r\n    if (!auth) return null;\r\n\r\n    const settings = [\r\n        { label: `Hi, ${auth.firstName}`, icon: null },\r\n        { label: 'Mis billeteras', icon: <WalletIcon sx={{ mr: 1 }} /> },\r\n        { label: 'Settings', icon: <SettingsIcon sx={{ mr: 1 }} /> },\r\n        { label: 'Logout', icon: <LogoutIcon sx={{ mr: 1 }} /> },\r\n    ];\r\n\r\n    const navItems = [\r\n        { href: '/welcome', label: 'Crypto Soporte', Icon: SupportAgentIcon },\r\n        { href: '/providers', label: 'Vender P2P', Icon: QrCodeIcon },\r\n        { href: '/create', label: 'Proveedor P2P', Icon: QrCodeIcon },\r\n    ];\r\n\r\n    const renderNavLinks = () => (\r\n        <Box sx={{ flexGrow: 1, display: 'flex', justifyContent: 'center' }}>\r\n            {navItems.map(({ href, label, Icon }) => (\r\n                <Link\r\n                    key={label}\r\n                    href={href}\r\n                    target={href.startsWith('http') ? '_blank' : undefined}\r\n                    sx={navLinksStyle}\r\n                >\r\n                    <Icon sx={navLinkIconStyle} />\r\n                    <Typography variant=\"body1\" sx={{ fontWeight: 'bold', fontSize: '1rem' }}>\r\n                        {label}\r\n                    </Typography>\r\n                </Link>\r\n            ))}\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"absolute\">\r\n                <Toolbar sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', pr: '24px' }}>\r\n                    {isMobile && (\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => setDrawerOpen(true)} sx={{ position: 'absolute', left: 16 }}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    )}\r\n                    <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center', ml: 3 }}> \r\n                        <Link href='/' sx={{ display: 'flex', alignItems: 'center', textDecoration: 'none', color: 'inherit' }}>\r\n                            <Typography variant=\"h6\" sx={{ display: 'flex', alignItems: 'center', color: 'white' }}>\r\n                                BlockVault\r\n                                <Box\r\n                                    sx={{\r\n                                        m: 1,\r\n                                        width: 45,\r\n                                        height: 50,\r\n                                        clipPath: 'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)',\r\n                                        bgcolor: '#2186EB',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                    }}\r\n                                >\r\n                                    <ArrowDropDownIcon sx={{ color: 'white', fontSize: 50 }} />\r\n                                </Box>\r\n                            </Typography>\r\n                        </Link>\r\n                    </Box>\r\n\r\n                    {isMobile ? (\r\n                        <Drawer\r\n                            anchor=\"left\"\r\n                            open={drawerOpen}\r\n                            onClose={() => setDrawerOpen(false)}\r\n                            sx={{\r\n                                '& .MuiDrawer-paper': {\r\n                                    backgroundColor: '#2186EB', \r\n                                    color: 'white', \r\n                                },\r\n                            }}\r\n                        >\r\n                            <Box\r\n                                sx={{ width: drawerWidth, paddingTop: 8 }}\r\n                                role=\"presentation\"\r\n                                onClick={() => setDrawerOpen(false)} \r\n                                onKeyDown={() => setDrawerOpen(false)}\r\n                            >\r\n                                <List>\r\n                                    {navItems.map(({ href, label, Icon }) => (\r\n                                        <ListItem\r\n                                            button\r\n                                            component={Link}\r\n                                            key={label}\r\n                                            href={href}\r\n                                            sx={{ ...navLinkItemStyle, color: 'white' }}\r\n                                            onClick={() => setDrawerOpen(false)} \r\n                                        >\r\n                                            <Icon sx={{ mr: 1, color: 'white' }} /> \r\n                                            <ListItemText primary={label} sx={{ color: 'white' }} /> \r\n                                        </ListItem>\r\n                                    ))}\r\n                                    <Divider />\r\n                                    {settings.map(({ label, icon }) => (\r\n                                        <ListItem\r\n                                            button\r\n                                            key={label}\r\n                                            onClick={handleClickUserMenu} \r\n                                            sx={{ ...navLinkItemStyle, color: 'white' }}\r\n                                        >\r\n                                            {icon}\r\n                                            <ListItemText primary={label} sx={{ color: 'white' }} />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                            </Box>\r\n                        </Drawer>\r\n                    ) : (\r\n                        renderNavLinks()\r\n                    )}\r\n\r\n                    <Box>\r\n                        <Tooltip title=\"Open settings\">\r\n                            <IconButton onClick={(e) => { e.stopPropagation(); handleOpenUserMenu(e); }} sx={{ p: 0 }}>\r\n                                <Avatar\r\n                                    sx={{\r\n                                        bgcolor: getAvatarColor(auth.firstName),\r\n                                        width: 35,\r\n                                        height: 35,\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        fontSize: 18,\r\n                                        fontWeight: 'bold',\r\n                                        color: '#fff',\r\n                                    }}\r\n                                >\r\n                                    {auth.firstName.charAt(0)}\r\n                                </Avatar>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                            sx={{ mt: '45px' }}\r\n                            anchorEl={anchorElUser}\r\n                            open={Boolean(anchorElUser)}\r\n                            onClose={handleCloseUserMenu}\r\n                        >\r\n                            {settings.map(({ label, icon }) => (\r\n                                <MenuItem key={label} onClick={handleClickUserMenu}>\r\n                                    {icon}\r\n                                    <Typography textAlign=\"center\">{label}</Typography>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Navbar() {\r\n    return <DashboardContent />;\r\n}\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction Title(props) {\r\n    return (\r\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTitle.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Title;","import { get, post, walletInfoApi, allWalletInfoApi, walletCreateApi } from '../api/http'\r\n\r\nexport default class Wallet {\r\n    static async getWalletInfo(walletId) {\r\n        return await get(walletInfoApi,\r\n            {\r\n                coin: walletId\r\n            })\r\n    }\r\n\r\n    static async getAllWalletInfo() {\r\n        return await get(allWalletInfoApi)\r\n    }\r\n\r\n    static async createWallet({ chainId, coin }) {\r\n        return await post(walletCreateApi,\r\n            {\r\n                chainId,\r\n                coin\r\n            })\r\n    }\r\n}","import { get, priceApi } from '../api/http'\r\n\r\nexport default class Wallet {\r\n    static async getPrice(coin) {\r\n        return await get(`${priceApi}${coin.toUpperCase()}`)\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport Wallet from '../services/wallet'\r\nimport Price from '../services/price'\r\n\r\nexport default function useAllWallets() {\r\n    const [allWalletInfo, setAllWalletInfo] = useState([]);\r\n    const [walletBalance, setWalletBalance] = useState(0);\r\n\r\n    async function getTotalBalance(info) {\r\n        if (info) {\r\n            var balance = 0\r\n            for (var i = 0; i < info.length; i++) {\r\n                const wallet = info[i]\r\n                const { data } = await Price.getPrice(wallet.coin)\r\n                if (data && 'USD' in data)\r\n                    balance += parseFloat(data.USD) * wallet.balance\r\n            }\r\n\r\n            return balance\r\n        }\r\n\r\n        return 0\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getAllWalletInfo() {\r\n            try {\r\n                const { data } = await Wallet.getAllWalletInfo()\r\n                if (data) {\r\n                    setAllWalletInfo(data)\r\n                    setWalletBalance(await getTotalBalance(data))\r\n                }\r\n            } catch (err) { }\r\n        }\r\n\r\n        getAllWalletInfo()\r\n    }, [])\r\n\r\n    return {\r\n        allWalletInfo,\r\n        walletBalance\r\n    }\r\n}","import React from 'react';\r\nimport Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\nimport WalletIcon from '@mui/icons-material/Wallet';\r\nimport Title from './utils/Title';\r\nimport useAllWallets from '../hooks/useAllWallets';\r\nimport { Box } from '@mui/material'; \r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst TotalBalance = () => {\r\n    const { walletBalance } = useAllWallets();\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>{t('total_balance_title')}</Title>\r\n            <Typography component=\"p\" variant=\"h4\" sx={{ mb: 1 }}>\r\n                ${parseFloat(walletBalance).toFixed(2)}\r\n            </Typography>\r\n            <Typography color=\"text.secondary\" sx={{ mb: 3 }}>\r\n                {t('total_balance_amount')}\r\n            </Typography>\r\n            <Box\r\n                sx={{\r\n                    mt: 2, \r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Link\r\n                    color=\"primary\"\r\n                    href=\"/wallets\"\r\n                    sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        textDecoration: 'none',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '1rem', \r\n                        padding: '8px 18px', \r\n                        borderRadius: '10px', \r\n                        backgroundColor: '#2196F3', \r\n                        color: 'white', \r\n                        boxShadow: '0px 3px 6px rgba(0, 0, 0, 0.1)', \r\n                        transition: 'all 0.3s ease', \r\n                        '&:hover': {\r\n                            backgroundColor: '#1976D2', \r\n                            boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.15)', \r\n                        },\r\n                    }}\r\n                >\r\n                    <Typography variant=\"body1\" sx={{ mr: 1 }}>\r\n                        {t('my_wallets')}\r\n                    </Typography>\r\n                    <WalletIcon\r\n                        sx={{\r\n                            color: 'white', \r\n                            fontSize: '1.75rem',\r\n                        }}\r\n                    />\r\n                </Link>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TotalBalance;\r\n","\r\nconst getNetworkName = (chainId) => {\r\n    return getNetWorkList().find(network => network.id === chainId).name\r\n}\r\n\r\nconst getCoinList = () => {\r\n    return [\r\n        'bnb',\r\n        'avax',\r\n        'ftm',\r\n        'eth',\r\n        'matic',\r\n        'op'\r\n    ]\r\n}\r\n\r\nconst getCoinLogo = (coin) => {\r\n    const baseApi = 'https://cryptologos.cc/logos'\r\n    return {\r\n        bnb: `${baseApi}/bnb-bnb-logo.png`,\r\n        avax: `${baseApi}/avalanche-avax-logo.png`,\r\n        eth: `${baseApi}/ethereum-eth-logo.png`,\r\n        matic: `${baseApi}/polygon-matic-logo.png`,\r\n        ftm: `${baseApi}/fantom-ftm-logo.png`,\r\n        op: `${baseApi}/optimism-ethereum-op-logo.png`\r\n\r\n    }[coin.toLowerCase()]\r\n}\r\n\r\nconst getDefaultCoin = () => {\r\n    return getCoinList()[0]\r\n}\r\n\r\nconst getNetWorkList = (coin) => {\r\n    const networks = [\r\n        {\r\n            id: 97,\r\n            name: 'Binance Smart Chain',\r\n            abbr: 'bsc',\r\n            coin: 'bnb',\r\n            explorerBase: 'https://testnet.bscscan.com/tx/'\r\n        },\r\n        {\r\n            id: 43113,\r\n            name: 'Avalanche',\r\n            abbr: 'avalanche',\r\n            coin: 'avax',\r\n            explorerBase: 'https://testnet.snowtrace.io/tx/'\r\n        },\r\n        {\r\n            id: 17000,\r\n            name: 'Ethereum',\r\n            abbr: 'ethereum',\r\n            coin: 'eth',\r\n            explorerBase: 'https://holesky.etherscan.io/tx/'\r\n        },\r\n        {\r\n            id: 4002,\r\n            name: 'Fantom',\r\n            abbr: 'fantom',\r\n            coin: 'ftm',\r\n            explorerBase: 'https://testnet.ftmscan.com/tx/'\r\n        },\r\n        {\r\n            id: 80002,\r\n            name: 'Polygon',\r\n            abbr: 'polygon',\r\n            coin: 'matic',\r\n            explorerBase: 'https://amoy.polygonscan.com/tx/'\r\n        },\r\n\r\n\r\n        {\r\n            id: 11155420,\r\n            name: 'Optimism',\r\n            abbr: 'optimism',\r\n            coin: 'op',\r\n            explorerBase: 'https://sepolia-optimism.etherscan.io/tx/'\r\n        }\r\n        \r\n\r\n            \r\n    ]\r\n\r\n    return coin ?\r\n        networks.filter(network => network.coin === coin.toLowerCase())\r\n        : networks\r\n}\r\n\r\nconst getDefaultNetworkId = (coin) => {\r\n    return {\r\n        bnb: 97,\r\n        avax: 43113,\r\n        eth: 17000,\r\n        ftm: 4002,\r\n        matic: 80002,\r\n        op: 11155420\r\n    }[coin.toLowerCase()]\r\n}\r\n\r\nconst getNetworkExplorerBase = (chainId) => {\r\n    return getNetWorkList().find(network => network.id === chainId).explorerBase\r\n}\r\n\r\nconst getCoinFee = (coin) => {\r\n    switch (coin.toUpperCase()) {\r\n        case 'BNB': return 0.005;\r\n        case 'AVAX': return 0.001;\r\n        case 'ETH': return 0.005;\r\n        case 'MATIC': return 0.1;\r\n        case 'FTM': return 0.5;\r\n        case 'OP': return 0.005;\r\n        default: return 0;\r\n    }\r\n}\r\n\r\nconst getCoinDecimalsPlace = (coin) => {\r\n    switch (coin.toUpperCase()) {\r\n        case 'BNB': return 8;\r\n        case 'AVAX': return 4;\r\n        case 'ETH': return 8;\r\n        case 'MATIC': return 2;\r\n        case 'FTM': return 2;\r\n        case 'OP': return 18;\r\n        default: return 8;\r\n    }\r\n}\r\n\r\nexport {\r\n    getNetworkName,\r\n    getCoinFee,\r\n    getNetworkExplorerBase,\r\n    getNetWorkList,\r\n    getDefaultNetworkId,\r\n    getCoinList,\r\n    getDefaultCoin,\r\n    getCoinLogo,\r\n    getCoinDecimalsPlace\r\n}","const getDisplayableTxHash = (txHash) => {\r\n    return `${txHash.slice(0, 15)}...`\r\n}\r\n\r\nconst getDisplayableAddress = (address) => {\r\n    return `${address.slice(0, 12)}...${address.slice(-12)}`\r\n}\r\n\r\n// 1. Aprobando, 2. Procesando, 3. Procesado, 4. Cancelado\r\nconst getStatusName = (code) => {\r\n    return {\r\n        0: 'Pendiente',\r\n        1: 'Aprobando',\r\n        2: 'Procesando',\r\n        3: 'Completado',\r\n        4: 'Cancelado'\r\n    }[code]\r\n}\r\n\r\nexport {\r\n    getDisplayableTxHash,\r\n    getDisplayableAddress,\r\n    getStatusName\r\n}","import * as React from 'react';\r\nimport useAllWallets from '../hooks/useAllWallets';\r\nimport { useTranslation } from 'react-i18next'; \r\n\r\nimport {\r\n    Typography,\r\n    Link,\r\n    Grid,\r\n    Paper,\r\n    Box,\r\n    Button,\r\n    useMediaQuery,\r\n    useTheme\r\n} from '@mui/material';\r\nimport { getCoinLogo } from './utils/Chains';\r\nimport { getDisplayableAddress } from './utils/Display';\r\n\r\nexport default function MyWallets() {\r\n    const { t } = useTranslation();\r\n    const { allWalletInfo } = useAllWallets();\r\n    const theme = useTheme();\r\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', padding: isSmallScreen ? 0.5 : 2, marginBottom: isSmallScreen ? 2 : 4 }}>\r\n            {isSmallScreen ? (\r\n                <Grid container spacing={1}>\r\n                    {allWalletInfo.map((wallet) => (\r\n                        <Grid item xs={12} key={wallet.walletId}>\r\n                            <Paper sx={{\r\n                                padding: 1.5, \r\n                                marginBottom: 1,\r\n                                borderRadius: 2, \r\n                                boxShadow: 3, \r\n                                backgroundColor: theme.palette.background.paper,\r\n                            }}>\r\n                                <Grid container spacing={1} direction='column'>\r\n                                    <Grid item>\r\n                                        <Typography variant='body2' fontWeight='bold'>\r\n                                        {t('currency')}: {/* Usar t para traducir */}\r\n                                        </Typography>\r\n                                        <Grid container spacing={0.5} alignItems='center'>\r\n                                            <Grid item>\r\n                                                <img width={20} src={getCoinLogo(wallet.coin)} alt={wallet.coin} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Typography variant='body2'>{wallet.coin}</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='body2' fontWeight='bold'>\r\n                                        {t('address')}: \r\n                                        </Typography>\r\n                                        <Link underline='none' href={`/wallet/${wallet.coin.toLowerCase()}`}>\r\n                                            <Typography variant='body2' color='primary'>\r\n                                                {getDisplayableAddress(wallet.address)}\r\n                                            </Typography>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='body2' fontWeight='bold'>\r\n                                        {t('balance')}: \r\n                                        </Typography>\r\n                                        <Typography variant='body2'>{wallet.balance}</Typography>\r\n                                    </Grid>\r\n\r\n        \r\n                                    <Grid item>\r\n                                        <Link \r\n                                            href={`/wallet/${wallet.coin.toLowerCase()}`} \r\n                                            underline='none' \r\n                                            style={{ width: '100%' }}\r\n                                        >\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                fullWidth \r\n                                                sx={{\r\n                                                    marginTop: 1,\r\n                                                    padding: isSmallScreen ? '6px 12px' : '8px 16px', \r\n                                                    fontSize: isSmallScreen ? '0.75rem' : '0.875rem', \r\n                                                    borderRadius: '16px', \r\n                                                }}\r\n                                            >\r\n                                                {t('view_details')} \r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            ) : (\r\n                <Box sx={{ overflowX: 'auto' }}>\r\n                    <Grid container spacing={2}>\r\n                        {allWalletInfo.map((wallet) => (\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} key={wallet.walletId}>\r\n                                <Paper sx={{\r\n                                    padding: 2, \r\n                                    borderRadius: 2, \r\n                                    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)',\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    border: '1px solid rgba(0, 0, 0, 0.1)',\r\n                                    minHeight: '100px',\r\n                                }}>\r\n                                    <Grid container spacing={1} alignItems='center'>\r\n                                        <Grid item>\r\n                                            <img width={20} src={getCoinLogo(wallet.coin)} alt={wallet.coin} />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                            <Typography variant='body2' component='div'>\r\n                                                {wallet.coin}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container spacing={1} direction='column' sx={{ marginTop: 0.5 }}>\r\n                                        <Grid item>\r\n                                            <Typography variant='body2' fontWeight='bold'>\r\n                                            {t('address')}: \r\n                                            </Typography>\r\n                                            <Link underline='none' href={`/wallet/${wallet.coin.toLowerCase()}`}>\r\n                                                <Typography variant='body2' color='primary'>\r\n                                                    {getDisplayableAddress(wallet.address)}\r\n                                                </Typography>\r\n                                            </Link>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant='body2' fontWeight='bold'>\r\n                                            {t('balance')}: \r\n                                            </Typography>\r\n                                            <Typography variant='body2'>{wallet.balance}</Typography>\r\n                                        </Grid>\r\n\r\n                                       \r\n                                        <Grid item>\r\n                                            <Link \r\n                                                href={`/wallet/${wallet.coin.toLowerCase()}`} \r\n                                                underline='none' \r\n                                                style={{ width: '100%' }}\r\n                                            >\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    fullWidth \r\n                                                    sx={{\r\n                                                        marginTop: 1,\r\n                                                        padding: isSmallScreen ? '6px 12px' : '8px 16px', \r\n                                                        fontSize: isSmallScreen ? '0.75rem' : '0.875rem', \r\n                                                        borderRadius: '16px'\r\n                                                    }}\r\n                                                >\r\n                                                    {t('view_details')} \r\n                                                </Button>\r\n                                            </Link>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Box>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Paper, Typography, Button } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport TotalBalance from './TotalBalance';\r\nimport MyWallets from './MyWallets';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Dashboard = () => {\r\n    const { t } = useTranslation(); \r\n    const { auth } = useContext(AuthContext);\r\n    \r\n    const texts = [\r\n        t('account_security_message'),\r\n        t('crypto_potential_message'),\r\n        t('p2p_service_message'),\r\n        t('blockchain_revolution_message'),\r\n        t('password_security_message'),\r\n        t('crypto_wallet_services_message'),\r\n        t('p2p_exchange_service_message')\r\n    ];\r\n\r\n    const [textIndex, setTextIndex] = useState(0);\r\n    const [visibleText, setVisibleText] = useState(texts[0]);\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fadeOutDuration = 1000;\r\n        const displayDuration = textIndex === 1 ? 8000 : 5000;\r\n\r\n        const timeout1 = setTimeout(() => {\r\n            setFadeOut(true);\r\n        }, displayDuration);\r\n\r\n        const timeout2 = setTimeout(() => {\r\n            setTextIndex((prev) => (prev + 1) % texts.length);\r\n            setFadeOut(false);\r\n        }, displayDuration + fadeOutDuration);\r\n\r\n        return () => {\r\n            clearTimeout(timeout1);\r\n            clearTimeout(timeout2);\r\n        };\r\n    }, [textIndex, texts]);\r\n\r\n    useEffect(() => {\r\n        setVisibleText(texts[textIndex]);\r\n    }, [textIndex, texts]);\r\n\r\n    return (\r\n        <Grid container spacing={3} sx={{ padding: 2 }}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={5} lg={4}>\r\n                        <Paper sx={{ p: 3, display: 'flex', flexDirection: 'column', height: 300, borderRadius: 2, boxShadow: '0px 4px 20px rgba(0, 0, 0, 0.1)', border: '1px solid #e0e0e0', bgcolor: '#ffffff' }}>\r\n                            <Typography variant=\"h6\" sx={{ mb: 2, color: 'black', fontWeight: 'bold', textShadow: '1px 1px 2px rgba(0, 0, 0, 0.2)' }}>\r\n                                 {t('account')}\r\n                            </Typography>\r\n                            <TotalBalance />\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={7} lg={8}>\r\n                        <Paper sx={{ p: 3, display: 'flex', flexDirection: 'column', height: 300, borderRadius: 2, boxShadow: '0px 4px 20px rgba(0, 0, 0, 0.1)', border: '1px solid #e0e0e0', bgcolor: '#ffffff' }}>\r\n                            <Typography variant=\"h6\" sx={{ mb: 2, color: 'black', fontWeight: 'bold', textShadow: '1px 1px 2px rgba(0, 0, 0, 0.2)' }}>\r\n                                {t('welcome', { firstName: auth?.firstName, lastName: auth?.lastName })}\r\n                            </Typography>\r\n                            <Typography \r\n                                variant=\"body1\" \r\n                                sx={{ \r\n                                    mb: 2, \r\n                                    fontSize: '1.1rem', \r\n                                    fontWeight: 'bold', \r\n                                    color: 'blue', \r\n                                    transition: 'opacity 0.5s ease', \r\n                                    opacity: fadeOut ? 0 : 1 \r\n                                }}>\r\n                                {visibleText}\r\n                            </Typography>\r\n                            <div style={{ display: 'flex', justifyContent: 'flex-start', marginTop: 'auto', flexWrap: 'wrap' }}>\r\n                                {['/wallets', '/wallets', '/settings'].map((link, index) => (\r\n                                    <Link key={index} to={link} style={{ textDecoration: 'none', marginBottom: '8px' }}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            sx={{\r\n                                                mr: 1,\r\n                                                bgcolor: '#2196F3',\r\n                                                borderRadius: '10px',\r\n                                                '&:hover': { bgcolor: '#1976D2' }, \r\n                                                boxShadow: '0px 3px 6px rgba(0, 0, 0, 0.1)', \r\n                                                minWidth: '70px', \r\n                                                fontSize: '0.85rem', \r\n                                                padding: '6px 13px', \r\n                                                transition: 'all 0.3s ease', \r\n                                            }}\r\n                                        >\r\n                                            {index === 0 ? t('deposit') : index === 1 ? t('withdraw') : t('security')}\r\n                                        </Button>\r\n                                    </Link>\r\n                                ))}\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Paper sx={{ p: 3, display: 'flex', flexDirection: 'column', borderRadius: 2, boxShadow: '0px 4px 20px rgba(0, 0, 0, 0.1)', border: '1px solid #e0e0e0', bgcolor: '#ffffff' }}>\r\n                    <Typography variant=\"h6\" sx={{ mb: 2, color: 'black', fontWeight: 'bold', textShadow: '1px 1px 2px rgba(0, 0, 0, 0.2)' }}>\r\n                        {t('my_wallets')}\r\n                    </Typography>\r\n                    <MyWallets />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useAllWallets from '../hooks/useAllWallets';\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Box,\r\n    Grid,\r\n    Button,\r\n    Divider,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    useMediaQuery\r\n} from '@mui/material';\r\nimport {\r\n    getCoinList,\r\n    getDefaultCoin,\r\n    getCoinLogo,\r\n    getDefaultNetworkId,\r\n    getNetworkName\r\n} from '../components/utils/Chains';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MyWallets from '../components/MyWallets';\r\nimport robotImage from '../assets/robot.png';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Wallets = () => {\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const { walletBalance } = useAllWallets();\r\n    const defaultCoin = getDefaultCoin();\r\n    const [selectedCoin, setSelectedCoin] = useState(defaultCoin);\r\n    const isMobile = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\r\n    const handleCoinChange = (e) => setSelectedCoin(e.target.value);\r\n    const handleCreateWallet = () => history.push(`/wallet/${selectedCoin}`);\r\n    const handleBack = () => history.push('/');\r\n\r\n    const texts = [\r\n        t('p2p_service_wallets'),\r\n        t('rpc_description'),\r\n        t('password_security_wallets'),\r\n        t('evm_wallet_description')\r\n    ];\r\n\r\n    const [textIndex, setTextIndex] = useState(0);\r\n    const [visibleText, setVisibleText] = useState(texts[0]);\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fadeOutDuration = 1000;\r\n        const displayDuration = textIndex === 1 ? 8000 : 5000;\r\n\r\n        const timeout1 = setTimeout(() => {\r\n            setFadeOut(true);\r\n        }, displayDuration);\r\n\r\n        const timeout2 = setTimeout(() => {\r\n            setTextIndex((prev) => (prev + 1) % texts.length);\r\n            setFadeOut(false);\r\n        }, displayDuration + fadeOutDuration);\r\n\r\n        return () => {\r\n            clearTimeout(timeout1);\r\n            clearTimeout(timeout2);\r\n        };\r\n    }, [textIndex, texts]);\r\n\r\n    useEffect(() => {\r\n        setVisibleText(texts[textIndex]);\r\n    }, [textIndex, texts]);\r\n\r\n    return (\r\n        <Grid container spacing={2} justifyContent=\"center\">\r\n            <Grid item xs={12} md={12}>\r\n                <Paper sx={{ p: 5, borderRadius: 2, boxShadow: 3, height: 'auto', minHeight: '700px', width: '100%' }}>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Box textAlign={isMobile ? 'center' : 'left'} p={3} border=\"1px solid #2196F3\" borderRadius={2} sx={{ backgroundColor: '#E3F2FD' }}>\r\n                                <Typography variant=\"h6\" color=\"black\">\r\n                                    {t('total_balance_title')}\r\n                                </Typography>\r\n                                <Typography variant=\"h4\" fontWeight={500}> \r\n                                    {'$'}{parseFloat(walletBalance).toFixed(2)}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box textAlign={isMobile ? 'center' : 'left'} mt={3} p={3} border=\"1px solid #2196F3\" borderRadius={2} sx={{ backgroundColor: '#E3F2FD' }}>\r\n                                <Box\r\n                                    display=\"flex\"\r\n                                    alignItems=\"center\"\r\n                                    sx={{\r\n                                        backgroundColor: '#2196F3',\r\n                                        padding: '8px 16px',\r\n                                        borderRadius: 2,\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        src={robotImage}\r\n                                        alt=\"Robot\"\r\n                                        width={110}\r\n                                        style={{ marginRight: 16 }}\r\n                                    />\r\n                                    <Typography\r\n                                        variant=\"body1\"\r\n                                        color=\"white\"\r\n                                        style={{ transition: 'opacity 1s', opacity: fadeOut ? 0 : 1 }}\r\n                                    >\r\n                                        {visibleText}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <Box display=\"flex\" flexDirection=\"column\" alignItems={isMobile ? 'center' : 'flex-start'} p={3} border=\"1px solid #2196F3\" borderRadius={2} sx={{ backgroundColor: '#E3F2FD' }}>\r\n                                <FormControl size=\"medium\" sx={{ mb: 2, width: '100%', maxWidth: 400 }}>\r\n                                    <InputLabel id=\"select-coin-label\">{t('wallets_link_text')}</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"select-coin-label\"\r\n                                        id=\"select-coin\"\r\n                                        value={selectedCoin}\r\n                                        onChange={handleCoinChange}\r\n                                        label=\"Selecciona una wallet\"\r\n                                        sx={{ borderRadius: 2 }}\r\n                                    >\r\n                                        {getCoinList().map((coin) => (\r\n                                            <MenuItem key={coin} value={coin}>\r\n                                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                    <img\r\n                                                        width={24}\r\n                                                        src={getCoinLogo(coin)}\r\n                                                        alt={`${coin} logo`}\r\n                                                        style={{ marginRight: 8 }}\r\n                                                    />\r\n                                                    <span>{coin.toUpperCase()} • {getNetworkName(getDefaultNetworkId(coin))}</span>\r\n                                                </Box>\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <Box display=\"flex\" flexDirection={isMobile ? 'column' : 'row'} justifyContent=\"flex-start\" gap={1} width=\"100%\" ml={isMobile ? 0 : 1}>\r\n                                    {/* Botón para \"Deposit\" */}\r\n                                    <Button\r\n                                        onClick={handleCreateWallet} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        sx={{\r\n                                            width: isMobile ? '100%' : '120px',\r\n                                            height: 40,\r\n                                            fontSize: '0.85rem', \r\n                                            borderRadius: '10px', \r\n                                            bgcolor: '#2196F3',\r\n                                            '&:hover': { bgcolor: '#1976D2' }, \r\n                                            boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.2)',\r\n                                            transition: 'all 0.3s ease', \r\n                                        }}\r\n                                    >\r\n                                        {t('deposit_button')}\r\n                                    </Button>\r\n                                    \r\n                                    <Button\r\n                                        onClick={handleCreateWallet}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        sx={{\r\n                                            width: isMobile ? '100%' : '120px',\r\n                                            height: 40,\r\n                                            fontSize: '0.85rem', \r\n                                            borderRadius: '10px', \r\n                                            bgcolor: '#2196F3', \r\n                                            '&:hover': { bgcolor: '#1976D2' }, \r\n                                            boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.2)',\r\n                                            transition: 'all 0.3s ease', \r\n                                        }}\r\n                                    >\r\n                                        {t('withdraw_button')}\r\n                                    </Button>\r\n\r\n                                    {/* Botón para \"Back\" */}\r\n                                    <Button\r\n                                        onClick={handleBack}\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        sx={{\r\n                                            width: isMobile ? '100%' : '100px',\r\n                                            height: 40,\r\n                                            fontSize: '0.85rem', \r\n                                            borderRadius: '10px',\r\n                                            boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.2)', \r\n                                        }}\r\n                                    >\r\n                                        {t('back_button')}\r\n                                    </Button>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Divider sx={{ my: 3 }} />\r\n                    <Box>\r\n                        <Typography variant=\"h6\" fontWeight={600} color=\"black\" align=\"center\" mb={2}>\r\n                            {t('your_wallets_title')}\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, minHeight: '300px' }}>\r\n                            <MyWallets />\r\n                        </Box>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <Box m={3} />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Wallets;\r\n","\r\nimport Withdraw from '../services/withdraw';\r\n\r\nexport default function useWithdraw(coin) {\r\n    async function withdraw(amount, account) {\r\n        try {\r\n            const { data } = await Withdraw.process(coin, amount, account)\r\n            if (data && 'data' in data)\r\n                return data.data\r\n        } catch (err) { }\r\n    }\r\n\r\n    return {\r\n        withdraw\r\n    }\r\n}","import { post, withdrawApi } from '../api/http'\r\n\r\nexport default class Withdraw {\r\n    static async process(coin, amount, account) {\r\n        return await post(withdrawApi,\r\n            {\r\n                coin,\r\n                amount: parseFloat(amount),\r\n                to: account\r\n            })\r\n    }\r\n}","import { get, transactionsApi, transactionApi } from '../api/http'\r\n\r\nexport default class Transaction {\r\n    static async getCoinTransactions(coin) {\r\n        return await get(transactionsApi,\r\n            {\r\n                coin\r\n            })\r\n    }\r\n\r\n    static async getTransaction(transactionId) {\r\n        return await get(transactionApi,\r\n            {\r\n                transactionId\r\n            })\r\n    }\r\n\r\n\r\n}","import * as React from 'react'\r\nimport Title from './utils/Title';\r\nimport {\r\n    Typography,\r\n    Link,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    Table,\r\n    Paper,\r\n    Box,\r\n    Alert,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    Grid,\r\n    Zoom,\r\n    IconButton,\r\n    Tooltip,\r\n    TableContainer,\r\n} from '@mui/material';\r\nimport { getDisplayableTxHash, getStatusName } from './utils/Display';\r\nimport {\r\n    getCoinDecimalsPlace,\r\n    getCoinFee,\r\n    getCoinLogo,\r\n    getNetworkExplorerBase,\r\n    getNetworkName\r\n} from './utils/Chains';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport CopyIcon from \"../assets/receiveCopyIcon.svg\";\r\nimport LinkIcon from \"../assets/linkIcon.svg\";\r\nimport getTransaction from '../hooks/getTransaction';\r\n\r\nexport default function CoinTransactions({ transactions, coin, chainId }) {\r\n    var interval;\r\n    const [copied, setCopied] = React.useState(false);\r\n    const [txCopied, setTxCopied] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [selectedTransaction, setSelectedTransaction] = React.useState(undefined);\r\n\r\n    const handleClose = () => {\r\n        if (interval) {\r\n            clearInterval(interval);\r\n        }\r\n        setOpenDialog(false);\r\n        setSelectedTransaction(undefined);\r\n    };\r\n\r\n    const monitorTransaction = (transaction) => {\r\n        if (interval) {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        interval = setInterval(async function () {\r\n            const _transaction = await getTransaction(transaction.transactionId);\r\n            setSelectedTransaction(_transaction);\r\n            if (_transaction.status === 3)\r\n                clearInterval(interval);\r\n        }, 5000);\r\n    };\r\n\r\n    const handleOpen = async (transaction, e) => {\r\n        if (e) e.preventDefault();\r\n        setSelectedTransaction(transaction);\r\n        setOpenDialog(true);\r\n        monitorTransaction(transaction);\r\n    };\r\n\r\n    const getRealDate = (date) => {\r\n        return date?.replace('T', ' ').replace('Z', '').replace(/\\.\\d+/, \"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Paper\r\n                sx={{\r\n                    p: 2,\r\n                    overflowX: 'auto' // Permite el desplazamiento horizontal en pantallas pequeñas\r\n                }}\r\n            >\r\n                <Title>Historial de transacciones</Title>\r\n                <TableContainer sx={{ maxHeight: 210 }}>\r\n                    <Table size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>IDTransacción</TableCell>\r\n                                <TableCell>Cantidad</TableCell>\r\n                                <TableCell>Estado</TableCell>\r\n                                <TableCell>Fecha</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {transactions.map((transaction) => (\r\n                                <TableRow style={{ cursor: 'pointer' }} key={transaction.txHash} onClick={() => handleOpen(transaction)}>\r\n                                    <TableCell>\r\n                                        <Link onClick={(e) => handleOpen(transaction, e)} underline='none' target='_blank'>\r\n                                            {getDisplayableTxHash(transaction.txHash)}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            color={transaction.nature === 1 ? 'green' : 'red'}>\r\n                                            {transaction.nature === 1 && transaction.status > 1 ? '+' : ''}\r\n                                            {transaction.amount ? parseFloat(transaction.amount).toFixed(getCoinDecimalsPlace(coin)) : ''}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {\r\n                                            transaction.status === 1 ?\r\n                                                <Alert severity=\"warning\" icon={false}>  {getStatusName(transaction.status)}</Alert> :\r\n                                                transaction.status === 2 ?\r\n                                                    <Alert severity=\"info\" icon={false}>\r\n                                                        {transaction.confirmations > 0 ? `Confirmación ${transaction.confirmations}/12` : getStatusName(transaction.status)}\r\n                                                    </Alert> :\r\n                                                    transaction.status === 3 ?\r\n                                                        <Alert severity=\"success\" icon={false}>  {getStatusName(transaction.status)}</Alert> :\r\n                                                        transaction.status === 4 ?\r\n                                                            <Alert severity=\"error\" icon={false}>  {getStatusName(transaction.status)}</Alert> :\r\n                                                            getStatusName(transaction.status)\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell>{getRealDate(transaction.created_at)}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Box margin={3}></Box>\r\n            </Paper>\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth=\"sm\" // Limita el ancho máximo del diálogo\r\n                open={openDialog}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {`Detalles de ${selectedTransaction\r\n                        ? selectedTransaction.nature === 1 ? 'Depósito' : 'Retiro' : 'Transacción'}`}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n    {\r\n        selectedTransaction ? (\r\n            <Box>\r\n                <Box mb={2}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                                Estado\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color={\r\n                                selectedTransaction.status === 1 ? '#ffc107'\r\n                                    : selectedTransaction.status === 2 ? '#17a2b8'\r\n                                        : selectedTransaction.status === 3 ? 'rgb(14, 203, 129)'\r\n                                            : selectedTransaction.status === 4 ? '#dc3545' : 'black'\r\n                            }>\r\n                                <span style={{ fontSize: '1.2rem' }}>●</span>\r\n                                {selectedTransaction.status === 2 ? selectedTransaction.confirmations > 0 ? `Confirmación ${selectedTransaction.confirmations}/12` : getStatusName(selectedTransaction.status)\r\n                                    : getStatusName(selectedTransaction.status)}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                                Fecha\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color='black'>\r\n                                {getRealDate(selectedTransaction.created_at)}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Box mb={2}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                                Moneda\r\n                            </Typography>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <img width={20} src={getCoinLogo(coin)} alt={`${coin.toUpperCase()} logo`} />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" color='black' style={{ marginLeft: 8 }}>\r\n                                        {coin.toUpperCase()}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                                Cantidad\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color='black'>\r\n                                {selectedTransaction.nature === 1 ? parseFloat(selectedTransaction.amount).toFixed(getCoinDecimalsPlace(coin))\r\n                                    : -1 * parseFloat(Math.abs(selectedTransaction.amount) - getCoinFee(coin)).toFixed(getCoinDecimalsPlace(coin))}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Box mb={2}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                                Red\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color='black'>\r\n                                {getNetworkName(chainId)}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                {selectedTransaction.nature === 2 && (\r\n                    <>\r\n                        <Box mb={2}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                                        Comisión de la red\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color='black'>\r\n                                        {getCoinFee(coin)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        <Box mb={2}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                                        Dirección to\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color='black'>\r\n                                        {selectedTransaction.to}\r\n                                        <Link color='inherit' underline='none' target='_blank' href={`${getNetworkExplorerBase(chainId).replace('tx', 'address')}${selectedTransaction.to}`}>\r\n                                            <IconButton>\r\n                                                <img src={LinkIcon} alt=\"abrir\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                                            </IconButton>\r\n                                        </Link>\r\n                                        <CopyToClipboard\r\n                                            text={selectedTransaction.to}\r\n                                            onCopy={() => setCopied(true)}\r\n                                        >\r\n                                            <Tooltip\r\n                                                title={\r\n                                                    copied ? (\r\n                                                        <Typography variant=\"caption\" color=\"text.success\">\r\n                                                            Dirección copiada!\r\n                                                        </Typography>\r\n                                                    ) : (\r\n                                                        \"Copiar\"\r\n                                                    )\r\n                                                }\r\n                                                TransitionComponent={Zoom}\r\n                                            >\r\n                                                <IconButton>\r\n                                                    <img src={CopyIcon} alt=\"copiar\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </CopyToClipboard>\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </>\r\n                )}\r\n                {selectedTransaction.status > 1 && (\r\n                    <Box mb={2}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                                    TxID\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color='black'>\r\n                                    {`${selectedTransaction.txHash.slice(0, selectedTransaction.txHash.length - 18)}...`}\r\n                                    <Link color='inherit' underline='none' target='_blank' href={`${getNetworkExplorerBase(chainId)}${selectedTransaction.txHash}`}>\r\n                                        <IconButton>\r\n                                            <img src={LinkIcon} alt=\"abrir\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                    <CopyToClipboard\r\n                                        text={selectedTransaction.txHash}\r\n                                        onCopy={() => setTxCopied(true)}\r\n                                    >\r\n                                        <Tooltip\r\n                                            title={\r\n                                                txCopied ? (\r\n                                                    <Typography variant=\"caption\" color=\"text.success\">\r\n                                                        TxID copiado!\r\n                                                    </Typography>\r\n                                                ) : (\r\n                                                    \"Copiar\"\r\n                                                )\r\n                                            }\r\n                                            TransitionComponent={Zoom}\r\n                                        >\r\n                                            <IconButton>\r\n                                                <img src={CopyIcon} alt=\"copiar\" style={{ width: \"100%\", height: \"100%\" }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </CopyToClipboard>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        ) : <></>\r\n    }\r\n</DialogContent>\r\n<DialogActions>\r\n<Button onClick={handleClose}>Ok</Button>\r\n</DialogActions>\r\n</Dialog>\r\n    </>\r\n);\r\n}\r\n","import Transaction from \"../services/transaction\"\r\n\r\nexport default async function getTransaction(transactionId) {\r\n    try {\r\n        let { data } = await Transaction.getTransaction(transactionId)\r\n        if (data)\r\n            return data\r\n    } catch (err) { }\r\n}","import React from 'react';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    IconButton,\r\n    Divider,\r\n    Stack,\r\n    TextField,\r\n    Tooltip,\r\n    Zoom,\r\n    Button,\r\n    useTheme,\r\n    useMediaQuery,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n} from '@mui/material';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport CopyIcon from '../assets/receiveCopyIcon.svg';\r\nimport QRCode from 'react-qr-code';\r\nimport useWalletInfo from '../hooks/useWalletInfo';\r\nimport useCoinPrice from '../hooks/useCoinPrice';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n    getCoinDecimalsPlace,\r\n    getCoinFee,\r\n    getDefaultNetworkId,\r\n    getNetworkName\r\n} from '../components/utils/Chains';\r\nimport useWithdraw from '../hooks/useWithdraw';\r\nimport createWallet from '../hooks/createWallet';\r\nimport CoinTransactions from '../components/CoinTransactions';\r\nimport useTransitions from '../hooks/useTransactions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function Wallet() {\r\n     const { t } = useTranslation();\r\n    const [copied, setCopied] = React.useState(false);\r\n    const [withdrawAmount, setWithdrawAmount] = React.useState('');\r\n    const [withdrawAddress, setWithdrawAddress] = React.useState('');\r\n    const [error, setError] = React.useState('');\r\n\r\n    const { walletId } = useParams();\r\n    const defaultNetworkId = getDefaultNetworkId(walletId);\r\n    const { walletInfo, isWalletLoading, setWalletInfo } = useWalletInfo(walletId);\r\n    const { coinPrice } = useCoinPrice(walletId);\r\n    const { withdraw } = useWithdraw(walletId);\r\n    const { transactions, getTransactions } = useTransitions(walletId);\r\n\r\n    const theme = useTheme();\r\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleWithdraw = async () => {\r\n        if (parseFloat(withdrawAmount) > parseFloat(walletInfo.balance)) {\r\n            setError(t('insufficient_funds'));\r\n            return;\r\n        }\r\n        const result = await withdraw(withdrawAmount, withdrawAddress);\r\n        if (result === 'success') {\r\n            getTransactions();\r\n            resetWithdrawFields();\r\n        }\r\n    };\r\n\r\n    const resetWithdrawFields = () => {\r\n        setWithdrawAmount('');\r\n        setWithdrawAddress('');\r\n        setError('');\r\n    };\r\n\r\n    const handleInputAddress = (e) => {\r\n        setWithdrawAddress(e.target.value);\r\n        setError('');\r\n    };\r\n\r\n    const handleInputAmount = (e) => {\r\n        setWithdrawAmount(e.target.value);\r\n        setError('');\r\n    };\r\n\r\n    const setMaxAmount = () => {\r\n        setWithdrawAmount(walletInfo.balance);\r\n        setError('');\r\n    };\r\n\r\n    const truncateToDecimals = (num, dec) => {\r\n        const calcDec = Math.pow(10, dec);\r\n        return Math.trunc(num * calcDec) / calcDec;\r\n    };\r\n\r\n    const handleCreateWallet = async () => {\r\n        const wallet = await createWallet({\r\n            coin: walletId,\r\n            chainId: defaultNetworkId,\r\n        });\r\n        if (wallet) {\r\n            setWalletInfo(wallet);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ p: 2, maxWidth: '800px', margin: '0 auto' }}>\r\n            {!isWalletLoading ? (\r\n                walletInfo ? (\r\n                    <>\r\n                        <Card sx={{ mb: 2 }}>\r\n                        <CardHeader title={t('balance')} />\r\n                            <CardContent>\r\n                                <Typography variant=\"h4\" fontWeight={700}>\r\n                                    {truncateToDecimals(walletInfo.balance, getCoinDecimalsPlace(walletInfo.coin))}\r\n                                    <Typography component=\"span\" variant=\"h4\" fontWeight={700}>\r\n                                        {` ${walletInfo.coin}`}\r\n                                    </Typography>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                    {coinPrice ? `$${(parseFloat(walletInfo.balance) * parseFloat(coinPrice)).toFixed(2)}` : ''}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Divider sx={{ mb: 2 }} />\r\n\r\n                        <Typography variant=\"h6\" color=\"text.primary\" mb={1}>{t('deposits')}</Typography> \r\n                        <Typography variant=\"caption\" color=\"text.secondary\" mb={1}>\r\n                        {t('your_address', {coin: walletInfo.coin,network: getNetworkName(walletInfo.chainId),})}\r\n                        </Typography>\r\n                        <Stack spacing={2}>\r\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ maxWidth: '470px' }}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    value={walletInfo.address}\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                        endAdornment: (\r\n                                            <CopyToClipboard\r\n                                                text={walletInfo.address}\r\n                                                onCopy={() => {\r\n                                                    setCopied(true);\r\n                                                    setTimeout(() => setCopied(false), 2000);\r\n                                                }}\r\n                                            >\r\n                                                <Tooltip\r\n                                                     title={copied ? <Typography variant=\"caption\" color=\"success\">{t('address_copied')}</Typography> : t('copy')} \r\n                                                    TransitionComponent={Zoom}\r\n                                                >\r\n                                                    <IconButton sx={{ padding: 0 }}>\r\n                                                        <img src={CopyIcon} alt=\"Copiar\" style={{ width: \"24px\", height: \"24px\" }} />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </CopyToClipboard>\r\n                                        ),\r\n                                    }}\r\n                                    fullWidth\r\n                                    sx={{ fontSize: '14px', fontWeight: 500 }}\r\n                                />\r\n                            </Stack>\r\n                            <QRCode value={walletInfo.address} size={200} />\r\n                        </Stack>\r\n\r\n                        <Divider sx={{ my: 3 }} />\r\n                        \r\n                        <Typography variant=\"h6\" color=\"text.primary\" mb={1}>{t('withdrawals')}</Typography> \r\n                        <Stack spacing={2}>\r\n                            <Stack direction={isSmallScreen ? \"column\" : \"row\"} spacing={1}>\r\n                                <TextField\r\n                                    value={withdrawAddress}\r\n                                    onChange={handleInputAddress}\r\n                                    placeholder={t('address_placeholder', { network: getNetworkName(walletInfo.chainId) })}\r\n                                    variant=\"outlined\"\r\n                                    sx={{ flexGrow: 7 }}\r\n                                />\r\n                                <TextField \r\n                                    type='number'\r\n                                    onChange={handleInputAmount}\r\n                                    value={withdrawAmount || ''}\r\n                                   placeholder={t(\"amount_to_withdraw\")}\r\n                                    variant=\"outlined\"\r\n                                    sx={{ flexGrow: 2}}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                onClick={setMaxAmount}\r\n                                                sx={{ height: '40%', color: '#000' }}\r\n                                            >\r\n                                                Max\r\n                                            </Button>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </Stack>\r\n                            <Button\r\n                                disabled={!(withdrawAmount > 0 && withdrawAddress && parseFloat(withdrawAmount) <= parseFloat(walletInfo.balance))}\r\n                                onClick={handleWithdraw}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                sx={{\r\n                                    borderRadius: 2,\r\n                                    padding: '8px',\r\n                                    fontSize: '14px',\r\n                                    width: '150px',\r\n                                }}\r\n                            >\r\n                                {t('withdraw')}\r\n                            </Button>\r\n                            {error && <Typography variant=\"caption\" color=\"error\">{error}</Typography>}\r\n                            <Typography variant=\"caption\" color=\"text.secondary\" mt={1}>\r\n                            {t('commission', {fee: getCoinFee(walletInfo.coin),coin: walletInfo.coin})}\r\n                            </Typography>\r\n                        </Stack>\r\n                    </>\r\n                ) : (\r\n                    <Button\r\n                        onClick={handleCreateWallet}\r\n                        color=\"info\"\r\n                        fullWidth\r\n                        sx={{ borderRadius: 2, padding: '10px', fontSize: '16px' }}\r\n                    >\r\n                        {t('create_wallet', { walletId: walletId.toUpperCase() })}\r\n                    </Button>\r\n                )\r\n            ) : (\r\n                <Typography variant=\"body1\" color=\"text.secondary\">Cargando...</Typography>\r\n            )}\r\n            <CoinTransactions transactions={transactions} chainId={defaultNetworkId} coin={walletId} />\r\n        </Box>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport Wallet from '../services/wallet'\r\n\r\nexport default function useWalletInfo(coin) {\r\n    const [walletInfo, setWalletInfo] = useState(null);\r\n    const [isInfoLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function getWalletInfo() {\r\n            try {\r\n                const { data } = await Wallet.getWalletInfo(coin)\r\n                if (data)\r\n                    setWalletInfo(data)\r\n            } catch (err) { }\r\n\r\n            setLoading(false)\r\n        }\r\n\r\n        getWalletInfo()\r\n    }, [coin])\r\n\r\n    return {\r\n        walletInfo,\r\n        isInfoLoading,\r\n        setWalletInfo,\r\n        setLoading\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport Price from '../services/price'\r\n\r\nexport default function useCoinPrice(coin) {\r\n    const [coinPrice, setCoinPrice] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function getCoinPrice() {\r\n            try {\r\n                const { data } = await Price.getPrice(coin)\r\n                if (data && 'USD' in data)\r\n                    setCoinPrice(data.USD)\r\n            } catch (err) { }\r\n        }\r\n\r\n        getCoinPrice()\r\n    }, [coin])\r\n\r\n    return {\r\n        coinPrice\r\n    }\r\n}","import { useState, useEffect, useCallback } from 'react';\r\nimport Transaction from '../services/transaction';\r\n\r\nexport default function useTransitions(coin) {\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    // Define getTransactions using useCallback to memoize it\r\n    const getTransactions = useCallback(async () => {\r\n        try {\r\n            let { data } = coin ? await Transaction.getCoinTransactions(coin)\r\n                : await Transaction.getAllTransactions();\r\n\r\n            if (data) {\r\n                setTransactions(data);\r\n            }\r\n        } catch (err) {\r\n            \r\n        }\r\n    }, [coin]); \r\n\r\n    useEffect(() => {\r\n        getTransactions();\r\n    }, [getTransactions]); \r\n\r\n    return {\r\n        transactions,\r\n        getTransactions\r\n    };\r\n}","import Wallet from '../services/wallet';\r\n\r\nexport default async function createWallet(coinAndChain) {\r\n    try {\r\n        const created = await Wallet.createWallet(coinAndChain)\r\n        if (created && 'data' in created) {\r\n            const { data } = await Wallet.getWalletInfo(created.data.coin)\r\n            if (data) {\r\n                return data\r\n            }\r\n        }\r\n    } catch (err) { }\r\n}","import React from 'react';\r\nimport { Container, Typography, Button, Box, Link } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst StyledContainer = styled(Container)(({ theme }) => ({\r\n  marginTop: theme.spacing(5),\r\n  textAlign: 'center',\r\n}));\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(5),\r\n  borderRadius: theme.shape.borderRadius * 2,\r\n  background: 'linear-gradient(145deg, #0a1f2d, #1c2d40)', \r\n  boxShadow: `0 8px 16px rgba(0, 0, 0, 0.3), 0 -4px 8px rgba(255, 255, 255, 0.1)`,\r\n  maxWidth: '900px',\r\n  margin: 'auto',\r\n  textAlign: 'left',\r\n}));\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => ({\r\n  textTransform: 'none',\r\n  fontSize: '16px',\r\n  fontWeight: 500,\r\n  padding: '12px 24px',\r\n  borderRadius: theme.shape.borderRadius * 2,\r\n  backgroundColor: '#007BFF', \r\n  color: '#FFFFFF',\r\n  '&:hover': {\r\n    backgroundColor: '#0056b3', \r\n    boxShadow: `0 4px 8px rgba(0, 0, 0, 0.4)`,\r\n  },\r\n}));\r\n\r\nconst WelcomeTemplate = () => {\r\n  return (\r\n    <StyledContainer maxWidth=\"lg\">\r\n      <StyledBox>\r\n        <Typography\r\n          variant=\"h4\"\r\n          gutterBottom\r\n          sx={{\r\n            color: '#E0E0E0', \r\n            fontWeight: 'bold',\r\n            fontFamily: 'Fira Code, monospace', \r\n            letterSpacing: 0.5,\r\n            fontSize: '2.5rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          ¡Bienvenido a <strong>Crypto Soporte</strong>!\r\n        </Typography>\r\n        \r\n        <Typography\r\n          variant=\"body1\"\r\n          gutterBottom\r\n          sx={{\r\n            color: '#B0B0B0', \r\n            fontFamily: 'Fira Code, monospace', \r\n            letterSpacing: 0.4,\r\n            lineHeight: 1.7,\r\n            fontSize: '1.2rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          Antes de comenzar, ten en cuenta que nuestro servicio de <strong>chat</strong> es una herramienta de comunicación privada, exclusivamente para usuarios dentro de la plataforma.\r\n        </Typography>\r\n\r\n        <Typography\r\n          variant=\"body1\"\r\n          gutterBottom\r\n          sx={{\r\n            color: '#B0B0B0', \r\n            fontFamily: 'Fira Code, monospace',\r\n            letterSpacing: 0.4,\r\n            lineHeight: 1.7,\r\n            fontSize: '1.2rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          Para mantener la sesión <strong>activa,</strong> no debes cerrar la página. De lo contrario, tu sesión caducará y deberás iniciar sesión de nuevo con tus credenciales.\r\n        </Typography>\r\n        \r\n        <Typography\r\n          variant=\"body1\"\r\n          gutterBottom\r\n          sx={{\r\n            color: '#B0B0B0',\r\n            fontFamily: 'Fira Code, monospace', \r\n            letterSpacing: 0.4,\r\n            lineHeight: 1.7,\r\n            fontSize: '1.2rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          Para acceder al sistema, inicia sesión con tu <strong>nombre de usuario</strong> y <strong>contraseña</strong>. Si es tu primera vez, utiliza las credenciales de tu wallet en Next para registrarte. Una vez dentro del chat, utiliza la barra de búsqueda para encontrar al usuario <strong>loredo123</strong>, quien es uno de nuestros encargados de soporte y asistencia.\r\n        </Typography>\r\n        \r\n        <Typography\r\n          variant=\"body1\"\r\n          gutterBottom\r\n          sx={{\r\n            color: '#B0B0B0',\r\n            fontFamily: 'Fira Code, monospace', \r\n            letterSpacing: 0.4,\r\n            lineHeight: 1.7,\r\n            fontSize: '1.2rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          Puedes acceder al chat en cualquier momento tocando el botón:\r\n        </Typography>\r\n\r\n        <Link href=\"http://192.168.100.2:3000\" underline=\"none\">\r\n          <StyledButton>\r\n            Ir al <strong>Chat</strong>\r\n          </StyledButton>\r\n        </Link>\r\n        \r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{\r\n            color: '#E0E0E0', \r\n            fontWeight: 'bold',\r\n            fontFamily: 'Fira Code, monospace', \r\n            mt: 4,\r\n            fontSize: '1.8rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          <strong>Políticas de Privacidad</strong>\r\n        </Typography>\r\n        \r\n        <Typography\r\n          variant=\"body2\"\r\n          gutterBottom\r\n          sx={{\r\n            color: '#B0B0B0', \r\n            fontFamily: 'Fira Code, monospace', \r\n            letterSpacing: 0.4,\r\n            lineHeight: 1.7,\r\n            fontSize: '1.1rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          La <strong>privacidad</strong> de nuestros usuarios es crucial. Te recomendamos revisar nuestras <strong>políticas de privacidad</strong> para entender cómo recopilamos, usamos y protegemos tu información.\r\n        </Typography>\r\n        \r\n        <Link href=\"https://yourcompany.com/privacy-policy\" underline=\"none\">\r\n          <StyledButton>\r\n            <strong>Políticas de Privacidad</strong>\r\n          </StyledButton>\r\n        </Link>\r\n        \r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{\r\n            color: '#E0E0E0', \r\n            fontWeight: 'bold',\r\n            fontFamily: 'Fira Code, monospace', \r\n            mt: 4,\r\n            fontSize: '1.8rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          <strong>Soporte y Contacto</strong>\r\n        </Typography>\r\n        \r\n        <Typography\r\n          variant=\"body2\"\r\n          gutterBottom\r\n          sx={{\r\n            color: '#B0B0B0',\r\n            fontFamily: 'Fira Code, monospace', \r\n            letterSpacing: 0.4,\r\n            lineHeight: 1.7,\r\n            fontSize: '1.1rem',\r\n            mb: 2,\r\n          }}\r\n        >\r\n          Si necesitas asistencia adicional o tienes alguna consulta, no dudes en <strong>contactarnos</strong> a través de nuestro correo electrónico de soporte: <Link href=\"mailto:support@yourcompany.com\" sx={{ color: '#007BFF' }}>support@yourcompany.com</Link>.\r\n        </Typography>\r\n        \r\n        <Typography\r\n          variant=\"caption\"\r\n          display=\"block\"\r\n          sx={{\r\n            mt: 3,\r\n            color: '#606060', \r\n            fontFamily: 'Fira Code, monospace', \r\n            letterSpacing: 0.3,\r\n            fontSize: '0.9rem',\r\n          }}\r\n        >\r\n          Si necesitas ayuda, no dudes en contactarnos.\r\n        </Typography>\r\n      </StyledBox>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default WelcomeTemplate;\r\n","import {\r\n    get,\r\n    post,\r\n    createProviderApi,\r\n    getAllProvidersApi,\r\n    findProviderByEmailApi,\r\n    openChatApi,\r\n    sendMessageApi,\r\n    getMessagesApi,\r\n    sendMessageAsProviderApi,\r\n    getChatDetailsByEmailApi,\r\n} from '../api/http';\r\n\r\nexport default class ProviderService {\r\n  \r\n    static async createProvider(body) {\r\n        return await post(createProviderApi, body);\r\n    }\r\n\r\n    static async getAllProviders() {\r\n        return await get(getAllProvidersApi, {});\r\n    }\r\n\r\n    static async findProviderByEmail(email) {\r\n        return await get(findProviderByEmailApi(email), {});\r\n    }\r\n\r\n    static async openChat(userEmail, providerEmail) {\r\n        return await post(openChatApi, { userEmail, providerEmail });\r\n    }\r\n    \r\n    static async sendMessage(senderEmail, chatId, messageContent) {\r\n        return await post(sendMessageApi, { senderEmail, chatId, messageContent });\r\n    }\r\n\r\n    static async getMessages(chatId) {\r\n        return await get(getMessagesApi(chatId), {});\r\n    }\r\n\r\n    static async sendMessageAsProvider(providerEmail, chatId, messageContent) {\r\n        return await post(sendMessageAsProviderApi, { providerEmail, chatId, messageContent });\r\n    }\r\n\r\n    static async getChatDetailsByEmail(chatId) {\r\n        return await get(getChatDetailsByEmailApi(chatId), {});\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport ProviderService from '../services/providerService';\r\n\r\nexport default function useProviders() {\r\n    const [providers, setProviders] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n    \r\n    const fetchProviders = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await ProviderService.getAllProviders();\r\n            setProviders(response.data);\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const createProvider = async (body) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await ProviderService.createProvider(body);\r\n            setSuccessMessage('Proveedor creado exitosamente.');\r\n            return response.data;\r\n        } catch (err) {\r\n            setError(err);\r\n            console.error('Error creating provider:', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const findProviderByEmail = async (email) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await ProviderService.findProviderByEmail(email);\r\n            if (!response.data) {\r\n                throw new Error(\"No hay proveedores\");\r\n            }\r\n            return response.data;\r\n        } catch (err) {\r\n            if (err.response && err.response.status === 500) {\r\n                setError(\"Error del servidor. Por favor, inténtelo de nuevo más tarde.\");\r\n            } else {\r\n                setError(err.message || err);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const openChat = async (userEmail, providerEmail) => {\r\n        setLoading(true);\r\n        try {\r\n            console.log('Opening chat with:', { userEmail, providerEmail });\r\n            const response = await ProviderService.openChat(userEmail, providerEmail);\r\n            setSuccessMessage('Chat abierto exitosamente.');\r\n            localStorage.setItem('chatData', JSON.stringify(response.data));\r\n            return response.data;\r\n        } catch (err) {\r\n            setError(err);\r\n            console.error('Error opening chat:', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const sendMessage = async (senderEmail, chatId, messageContent) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await ProviderService.sendMessage(senderEmail, chatId, messageContent);\r\n            setSuccessMessage('Mensaje enviado exitosamente.');\r\n            return response.data;\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const sendMessageAsProvider = async (providerEmail, chatId, messageContent) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await ProviderService.sendMessageAsProvider(providerEmail, chatId, messageContent);\r\n            setSuccessMessage('Mensaje enviado exitosamente.');\r\n            return response.data;\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n      \r\n      const getChatDetailsByEmail = async (email) => {\r\n        setLoading(true);\r\n        try {\r\n          const response = await ProviderService.getChatDetailsByEmail(email);\r\n          return response.data;\r\n        } catch (err) {\r\n          setError(err);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n    const getMessages = async (chatId) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await ProviderService.getMessages(chatId);\r\n            setMessages(response.data);\r\n            return response.data;\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProviders();\r\n    }, []);\r\n\r\n    return {\r\n        providers,\r\n        loading,\r\n        error,\r\n        setError, \r\n        messages,\r\n        successMessage,\r\n        findProviderByEmail,\r\n        openChat,\r\n        sendMessage,\r\n        sendMessageAsProvider,\r\n        getChatDetailsByEmail,\r\n        getMessages,\r\n        createProvider,\r\n    };\r\n}","import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  Grid\r\n} from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport BadgeIcon from '@mui/icons-material/Badge';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\nimport useProviders from '../hooks/useProviders';\r\nimport User from '../services/user'; // Importar User\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: 'Roboto, sans-serif',\r\n    h6: {\r\n      fontWeight: 700,\r\n      fontSize: '1.25rem',\r\n      color: '#E0E0E0',\r\n    },\r\n    body2: {\r\n      fontSize: '0.875rem',\r\n      color: '#B0B0B0',\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#1E88E5',\r\n    },\r\n    secondary: {\r\n      main: '#FF5722',\r\n    },\r\n    background: {\r\n      default: '#121212',\r\n      paper: '#1E1E1E',\r\n    },\r\n    text: {\r\n      primary: '#E0E0E0',\r\n      secondary: '#B0B0B0',\r\n    },\r\n  },\r\n  components: {\r\n    MuiCard: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: 16,\r\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.5)',\r\n          transition: 'transform 0.3s ease, box-shadow 0.3s ease',\r\n          height: '300px', \r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'space-between',\r\n          overflow: 'hidden', \r\n          '&:hover': {\r\n            transform: 'translateY(-8px)',\r\n            boxShadow: '0 6px 30px rgba(0, 0, 0, 0.6)',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n          borderRadius: 24,\r\n          padding: '12px 24px',\r\n          fontWeight: 600,\r\n          '&:hover': {\r\n            backgroundColor: '#FF3D00',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      styleOverrides: {\r\n        root: {\r\n          '& .MuiOutlinedInput-root': {\r\n            borderRadius: 12,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      styleOverrides: {\r\n        paper: {\r\n          borderRadius: 16,\r\n          padding: '24px',\r\n          backgroundColor: '#1E1E1E',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default function ProviderCard({ provider }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n  const [cryptoCoin, setCryptoCoin] = useState('');\r\n  const { openChat } = useProviders();\r\n  const { auth } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n\r\n    const fetchUserEmail = async () => {\r\n      if (!auth) return;\r\n      try {\r\n        const { data } = await User.getInfo();\r\n        if (data?.data && isMounted.current) {\r\n          const { email } = data.data;\r\n          auth.email = email;\r\n        } else {\r\n          console.error(data.error);\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n\r\n    fetchUserEmail();\r\n\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, [auth]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePaymentMethodChange = (event) => {\r\n    setPaymentMethod(event.target.value);\r\n  };\r\n\r\n  const handleCryptoCoinChange = (event) => {\r\n    setCryptoCoin(event.target.value);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const userEmail = auth?.email;\r\n      if (!userEmail) {\r\n        console.error('User email is not available');\r\n        return;\r\n      }\r\n      const response = await openChat(userEmail, provider.email);\r\n      console.log('Open chat response:', response);\r\n      localStorage.setItem('chatData', JSON.stringify(response));\r\n      if (response) {\r\n        history.push('/chat');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error opening chat:', error);\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box display=\"flex\" justifyContent=\"center\" mt={3} p={2}>\r\n        <Card>\r\n          <CardContent\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'space-between',\r\n              height: '100%',\r\n            }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <BadgeIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                  <Typography variant=\"h6\" color=\"text.primary\" sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {provider.firstName} {provider.lastName}\r\n                    <CheckCircleIcon sx={{ color: '#1DA1F2', ml: 1, fontSize: 24 }} />\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <EmailIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    <strong>Email:</strong> {provider.email}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <LocationOnIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    <strong>Street Name:</strong> {provider.streetName}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <LocationOnIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    <strong>City:</strong> {provider.city}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleClickOpen}>\r\n              Vender\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Información de Venta</DialogTitle>\r\n        <DialogContent>\r\n          <TextField autoFocus margin=\"dense\" label=\"Nombre Completo\" type=\"text\" fullWidth variant=\"outlined\" />\r\n          <FormControl fullWidth margin=\"dense\">\r\n            <InputLabel>Método de Pago</InputLabel>\r\n            <Select value={paymentMethod} onChange={handlePaymentMethodChange} label=\"Método de Pago\">\r\n              <MenuItem value=\"BAC\">BAC CREDOMATIC</MenuItem>\r\n              <MenuItem value=\"LAFISE\">LAFISE</MenuItem>\r\n              <MenuItem value=\"En Persona\">En Persona</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl fullWidth margin=\"dense\">\r\n            <InputLabel>Cripto Moneda</InputLabel>\r\n            <Select value={cryptoCoin} onChange={handleCryptoCoinChange} label=\"Cripto Moneda\">\r\n              <MenuItem value=\"ETH\">ETH</MenuItem>\r\n              <MenuItem value=\"MATIC\">MATIC</MenuItem>\r\n              <MenuItem value=\"FTM\">FTM</MenuItem>\r\n              <MenuItem value=\"Avalanche\">Avalanche</MenuItem>\r\n              <MenuItem value=\"BNB\">BNB</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField margin=\"dense\" label=\"Número de Cuenta\" type=\"text\" fullWidth variant=\"outlined\" />\r\n          <TextField margin=\"dense\" label=\"Cantidad\" type=\"number\" fullWidth variant=\"outlined\" />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={handleConfirm} color=\"secondary\">\r\n            Confirmar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </ThemeProvider>\r\n  );\r\n}","import React from 'react';\r\nimport useProviders from '../hooks/useProviders';\r\nimport ProviderCard from '../components/ProviderCard';\r\nimport { Typography, Box, Grid } from '@mui/material';\r\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\r\n\r\nexport default function ProvidersList() {\r\n    const { providers, loading, error } = useProviders();\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error.message}</p>;\r\n\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                <Box display=\"flex\" alignItems=\"center\" p={1} bgcolor=\"#333\" borderRadius={2}>\r\n                    <MonetizationOnIcon style={{ color: 'green', marginRight: '8px' }} />\r\n                    <Typography variant=\"h6\" style={{ color: 'white' }}>\r\n                        Vender P2P\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            <Grid container spacing={2} p={2}>\r\n                {providers.map(provider => (\r\n                    <Grid item xs={12} sm={6} md={4} key={provider.idNumber}>\r\n                        <ProviderCard provider={provider} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  Snackbar,\r\n  CircularProgress,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\nimport useProviders from '../hooks/useProviders';\r\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nexport default function ProviderForm() {\r\n  const [providerData, setProviderData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    idNumber: '',\r\n    email: '',\r\n    streetName: '',\r\n    city: '',\r\n    postalCode: ''\r\n  });\r\n  const [file, setFile] = useState(null);\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [errors, setErrors] = useState({\r\n    emailError: false,\r\n    streetNameError: false,\r\n    firstNameError: false,\r\n    lastNameError: false,\r\n    idNumberError: false,\r\n    cityError: false,\r\n    postalCodeError: false\r\n  });\r\n\r\n  const { findProviderByEmail, createProvider } = useProviders();\r\n  const { auth } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const checkProvider = async () => {\r\n      try {\r\n        const existingProvider = await findProviderByEmail(auth.email);\r\n        if (existingProvider) {\r\n          console.log('Provider already exists, redirecting to /providerchat');\r\n          history.push('/providerchat');\r\n        }\r\n      } catch (err) {\r\n        if (err.message === \"No hay proveedores\") {\r\n          console.log('No hay proveedores');\r\n        } else {\r\n          console.error('Error checking provider:', err);\r\n        }\r\n      }\r\n    };\r\n\r\n    checkProvider();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []); // Ejecutar solo una vez al montar el componente\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProviderData(prevData => ({ ...prevData, [name]: value }));\r\n\r\n    // Validate fields\r\n    setErrors(prevErrors => ({\r\n      ...prevErrors,\r\n      [name + 'Error']: validateField(name, value)\r\n    }));\r\n  };\r\n\r\n  const validateField = (name, value) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\r\n      case 'streetName':\r\n        return value.length < 12;\r\n      case 'firstName':\r\n      case 'lastName':\r\n      case 'idNumber':\r\n      case 'city':\r\n      case 'postalCode':\r\n        return value.trim() === '';\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n    setFileUploaded(Boolean(selectedFile));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (Object.values(errors).includes(true)) {\r\n      setSnackbarMessage('Please correct the errors before submitting');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n    setLoading(true);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      Object.keys(providerData).forEach(key => formData.append(key, providerData[key]));\r\n      if (file) {\r\n        formData.append('image', file);\r\n      }\r\n\r\n      await createProvider(formData);\r\n      setSnackbarMessage('Provider created successfully');\r\n      history.push('/providerchat');\r\n    } catch (err) {\r\n      setSnackbarMessage('Error creating provider');\r\n    } finally {\r\n      setLoading(false);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginTop: 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          padding: 3,\r\n          borderRadius: 2,\r\n          maxWidth: 600,\r\n          margin: 'auto',\r\n          backgroundColor: '#fff',\r\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n          position: 'relative',\r\n          overflow: 'hidden',\r\n          animation: 'glow 1.5s infinite alternate',\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          gutterBottom\r\n          sx={{\r\n            fontWeight: 'bold',\r\n            color: '#000',\r\n            textAlign: 'center',\r\n            mb: 3,\r\n          }}\r\n        >\r\n          Regístrate como proveedor P2P\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={3}>\r\n            {[\r\n              { label: 'First Name', name: 'firstName', icon: <PersonIcon /> },\r\n              { label: 'Last Name', name: 'lastName', icon: <PersonIcon /> },\r\n              { label: 'ID Number', name: 'idNumber', icon: <PhotoCameraIcon /> },\r\n              { label: 'Email', name: 'email', icon: <EmailIcon /> },\r\n              { label: 'Street Name', name: 'streetName', icon: <LocationOnIcon /> },\r\n              { label: 'City', name: 'city', icon: <LocationOnIcon /> },\r\n              { label: 'Postal Code', name: 'postalCode', icon: <LocationOnIcon /> }\r\n            ].map((field, index) => (\r\n              <Grid item xs={12} sm={6} key={index}>\r\n                <TextField\r\n                  label={field.label}\r\n                  name={field.name}\r\n                  value={providerData[field.name]}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  required\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 2,\r\n                      backgroundColor: alpha('#f5f5f5', 0.8),\r\n                    },\r\n                    '& .MuiInputLabel-root': {\r\n                      color: '#000', \r\n                      fontWeight: 'bold',\r\n                    },\r\n                    '& .MuiInputBase-input': {\r\n                      backgroundColor: alpha('#f5f5f5', 0.8),\r\n                    },\r\n                    '& .MuiFormHelperText-root': {\r\n                      color: '#f44336',\r\n                    },\r\n                    '& .MuiInputLabel-shrink': {\r\n                      top: 0,\r\n                      left: 0,\r\n                      color: '#000',\r\n                      backgroundColor: alpha('#fff', 0.8),\r\n                      padding: '0 4px',\r\n                    },\r\n                  }}\r\n                  error={errors[field.name + 'Error']}\r\n                  helperText={errors[field.name + 'Error'] ? `${field.label} is required` : ''}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        {field.icon}\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n            ))}\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"body1\" gutterBottom sx={{ color: '#000', fontWeight: '500', textAlign: 'center', mb: 2 }}>\r\n                Se requiere de una selfie con la identificación en mano para verificar la identidad.\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: 'none' }}\r\n                  id=\"file-upload\"\r\n                  type=\"file\"\r\n                  onChange={handleFileChange}\r\n                />\r\n                <label htmlFor=\"file-upload\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    component=\"span\"\r\n                    sx={{\r\n                      borderRadius: '12px',\r\n                      padding: '10px 20px',\r\n                      fontWeight: 'bold',\r\n                      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n                      '&:hover': {\r\n                        backgroundColor: alpha('#1976d2', 0.8),\r\n                        transform: 'scale(1.05)',\r\n                      },\r\n                      position: 'relative',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      marginRight: '16px',\r\n                    }}\r\n                  >\r\n                    <PhotoCameraIcon sx={{ mr: 1 }} />\r\n                    Upload selfie\r\n                    {fileUploaded && (\r\n                      <CheckCircleIcon sx={{\r\n                        color: 'green',\r\n                        position: 'absolute',\r\n                        right: '1px',\r\n                        fontSize: '20px',\r\n                        marginLeft: '30px',\r\n                      }} />\r\n                    )}\r\n                  </Button>\r\n                </label>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  sx={{\r\n                    borderRadius: '12px',\r\n                    padding: '12px 24px',\r\n                    fontWeight: 'bold',\r\n                    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)',\r\n                    '&:hover': {\r\n                      backgroundColor: alpha('#1976d2', 0.8),\r\n                      transform: 'scale(1.05)',\r\n                    },\r\n                  }}\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? <CircularProgress size={24} sx={{ color: '#fff' }} /> : 'Create Provider'}\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Snackbar\r\n            open={snackbarOpen}\r\n            autoHideDuration={6000}\r\n            onClose={handleCloseSnackbar}\r\n            message={snackbarMessage}\r\n            sx={{ '& .MuiSnackbarContent-root': { backgroundColor: '#333', color: '#fff' } }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n\r\n      <style jsx global>{`\r\n        @keyframes glow {\r\n          0% {\r\n            box-shadow: 0 0 8px rgba(0, 122, 255, 0.5);\r\n          }\r\n          100% {\r\n            box-shadow: 0 0 16px rgba(0, 122, 255, 0.7);\r\n          }\r\n        }\r\n      `}</style>\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport ProviderForm from '../components/ProviderFom';\r\nimport { Typography, Box } from '@mui/material';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd'; \r\n\r\nexport default function CreateProvider() {\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                <Box display=\"flex\" alignItems=\"center\" p={1} bgcolor=\"#333\" borderRadius={2}>\r\n                    <PersonAddIcon style={{ color: 'green', marginRight: '8px' }} />\r\n                    <Typography variant=\"h6\" style={{ color: 'white' }}>\r\n                        Create Provider\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            <ProviderForm />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    AppBar, Toolbar, Typography, Box, Link, Button, IconButton, Drawer,\r\n    List, ListItem, ListItemText, Divider, Grid, Card, CardContent\r\n} from '@mui/material';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport heroBanner from '../assets/hero-banner.png';\r\nimport blockchainImg from '../assets/blockchain.png';\r\nimport web3Img from '../assets/web3.png';\r\nimport QrCodeIcon from '@mui/icons-material/QrCode';\r\nimport RecentActorsIcon from '@mui/icons-material/RecentActors';\r\nimport ContactMailIcon from '@mui/icons-material/ContactMail';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\n\r\nconst pairs = [\r\n    { label: 'Bitcoin (BTC)', value: 'bitcoin', logo: 'https://cryptologos.cc/logos/bitcoin-btc-logo.png' },\r\n    { label: 'Ethereum (ETH)', value: 'ethereum', logo: 'https://cryptologos.cc/logos/ethereum-eth-logo.png' },\r\n    { label: 'Polygon (MATIC)', value: 'matic-network', logo: 'https://cryptologos.cc/logos/polygon-matic-logo.png' },\r\n    { label: 'Binance (BNB)', value: 'binancecoin', logo: 'https://cryptologos.cc/logos/bnb-bnb-logo.png' },\r\n    { label: 'Fantom (FTM)', value: 'fantom', logo: 'https://cryptologos.cc/logos/fantom-ftm-logo.png' },\r\n    { label: 'Avalanche (AVAX)', value: 'avalanche-2', logo: 'https://cryptologos.cc/logos/avalanche-avax-logo.png' },\r\n    { label: 'Optimism (OP)', value: 'BINANCE:OPUSDT', logo: 'https://cryptologos.cc/logos/optimism-ethereum-op-logo.png' },\r\n];\r\n\r\nconst navItems = [\r\n    { to: '/create', icon: <QrCodeIcon />, text: 'Proveedor P2P' },\r\n    { to: '/providers', icon: <QrCodeIcon />, text: 'Vender P2P' },\r\n    { to: '/servicios', icon: <RecentActorsIcon />, text: 'Servicios' },\r\n    { to: '/contactanos', icon: <ContactMailIcon />, text: 'Contáctanos' }\r\n];\r\n\r\nconst Nextmain = () => {\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const drawer = (\r\n        <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\r\n            <List>\r\n                {navItems.map((item, index) => (\r\n                    <ListItem key={index}>\r\n                        <ListItemText>\r\n                            <Link\r\n                                component={RouterLink}\r\n                                to={item.to}\r\n                                sx={{\r\n                                    textDecoration: 'none',\r\n                                    color: 'text.primary',\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: '0.75rem',\r\n                                }}\r\n                            >\r\n                                {item.icon && <span style={{ verticalAlign: 'middle', marginRight: '0.5rem' }}>{item.icon}</span>}\r\n                                {item.text}\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem>\r\n                    <ListItemText>\r\n                        <Button\r\n                            component={RouterLink}\r\n                            to=\"/login\"\r\n                            variant=\"outlined\"\r\n                            color=\"inherit\"\r\n                            sx={{\r\n                                width: 'auto',\r\n                                mb: 1,\r\n                                borderColor: 'text.primary',\r\n                                fontSize: '0.75rem',\r\n                                borderRadius: '20px',\r\n                                padding: '6px 16px',\r\n                                '&:hover': {\r\n                                    borderColor: '#FFD700',\r\n                                    color: '#FFD700',\r\n                                },\r\n                            }}\r\n                        >\r\n                            Iniciar sesión\r\n                        </Button>\r\n                        <Button\r\n                            component={RouterLink}\r\n                            to=\"/register\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            sx={{\r\n                                width: 'auto',\r\n                                fontSize: '0.75rem',\r\n                                borderRadius: '20px',\r\n                                padding: '6px 16px',\r\n                                '&:hover': {\r\n                                    backgroundColor: '#0056b3',\r\n                                },\r\n                            }}\r\n                        >\r\n                            Registrarse\r\n                        </Button>\r\n                    </ListItemText>\r\n                </ListItem>\r\n            </List>\r\n        </Box>\r\n    );\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" sx={{ width: '100%', top: 0, bgcolor: '#1976d2' }}>\r\n                <Toolbar sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                    \r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        sx={{ display: { xs: 'block', sm: 'none' } }}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Typography variant=\"h6\" sx={{ display: 'flex', alignItems: 'center', color: 'white' }}>\r\n                            BlockVault\r\n                        </Typography>\r\n                        <Box\r\n                            sx={{\r\n                                m: 1,\r\n                                width: 45,\r\n                                height: 50,\r\n                                clipPath: 'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)',\r\n                                bgcolor: '#2186EB',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                ml: 1,\r\n                            }}\r\n                        >\r\n                            <ArrowDropDownIcon sx={{ color: 'white', fontSize: 50 }} />\r\n                        </Box>\r\n                    </Box>\r\n    \r\n                    <Box sx={{ display: { xs: 'none', sm: 'flex' }, alignItems: 'center' }}>\r\n    {[\r\n        { to: '/create', label: 'Proveedor P2P', icon: <QrCodeIcon /> },\r\n        { to: '/providers', label: 'Vender P2P', icon: <QrCodeIcon /> },\r\n        { to: '/servicios', label: 'Servicios', icon: <RecentActorsIcon /> },\r\n        { to: '/contactanos', label: 'Contáctanos', icon: <ContactMailIcon /> },\r\n    ].map((item, index) => (\r\n        <Link\r\n            key={index}\r\n            component={RouterLink}\r\n            to={item.to}\r\n            sx={{\r\n                color: 'white',\r\n                textDecoration: 'none',\r\n                marginLeft: 4,\r\n                fontWeight: 'bold',\r\n                fontSize: '0.9rem',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                '&:hover': {\r\n                    textDecoration: 'underline',\r\n                    color: '#FFD700',\r\n                },\r\n            }}\r\n        >\r\n            <span style={{ marginRight: '0.5rem' }}>{item.icon}</span>\r\n            {item.label}\r\n        </Link>\r\n    ))}\r\n</Box>\r\n\r\n\r\n                    <Box sx={{ display: { xs: 'none', sm: 'flex' }, alignItems: 'center' }}>\r\n                        <Button\r\n                            component={RouterLink}\r\n                            to=\"/login\"\r\n                            variant=\"outlined\"\r\n                            color=\"inherit\"\r\n                            sx={{\r\n                                marginLeft: 2,\r\n                                fontWeight: 'bold',\r\n                                color: 'white',\r\n                                borderColor: 'white',\r\n                                '&:hover': {\r\n                                    borderColor: '#FFD700',\r\n                                    color: '#FFD700',\r\n                                },\r\n                            }}\r\n                        >\r\n                            Iniciar sesión\r\n                        </Button>\r\n                        <Button\r\n                            component={RouterLink}\r\n                            to=\"/register\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            sx={{\r\n                                marginLeft: 2,\r\n                                fontWeight: 'bold',\r\n                                '&:hover': {\r\n                                    bgcolor: '#004ba0',\r\n                                },\r\n                            }}\r\n                        >\r\n                            Registrarse\r\n                        </Button>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            \r\n            <Drawer\r\n                variant=\"temporary\"\r\n                anchor=\"left\"\r\n                open={mobileOpen}\r\n                onClose={handleDrawerToggle}\r\n                sx={{\r\n                    display: { xs: 'block', sm: 'none' },\r\n                    '& .MuiDrawer-paper': {\r\n                        width: 240,\r\n                        boxSizing: 'border-box',\r\n                    },\r\n                }}\r\n            >\r\n                {drawer}\r\n            </Drawer>\r\n\r\n            <main style={{ marginTop: '64px', padding: '16px' }}>\r\n    <Box\r\n        sx={{\r\n            display: 'flex',\r\n            flexDirection: { xs: 'column', md: 'row' },\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            gap: 2, \r\n            mb: 4,\r\n        }}\r\n    >\r\n        <Box sx={{ textAlign: 'center', mb: { xs: 4, md: 0 } }}> \r\n            <Typography variant=\"h5\" sx={{ flexShrink: 0, mb: 1 }}> \r\n                Welcome to NextCryptoATM\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" sx={{ color: 'text.secondary', mb: 1 }}> \r\n                Your gateway to the future of crypto transactions.\r\n            </Typography>\r\n            <Button\r\n                component={RouterLink}\r\n                to=\"/\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ fontWeight: 'bold' }}\r\n            >\r\n                Get Started\r\n            </Button>\r\n        </Box>\r\n        <img\r\n            src={heroBanner}\r\n            alt=\"Hero Banner\"\r\n            style={{\r\n                maxWidth: '80%', \r\n                height: 'auto',\r\n                borderRadius: '8px',\r\n                flexShrink: 0,\r\n            }}\r\n        />\r\n    </Box>\r\n\r\n\r\n\r\n\r\n    {/* SECCION 2 */}\r\n\r\n    <Divider sx={{ my: 10, bgcolor: '#ddd', height: 2 }} />\r\n<Box\r\n    sx={{\r\n        padding: 4,\r\n        background: 'linear-gradient(135deg, #f0f4f8 0%, #e0e5e8 100%)',\r\n        borderRadius: 4,\r\n        boxShadow: '0 10px 30px rgba(0, 0, 0, 0.1)',\r\n        position: 'relative',\r\n        overflow: 'hidden'\r\n    }}\r\n>\r\n\r\n\r\n<Box\r\n    sx={{\r\n        padding: 4,\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: 8,\r\n        boxShadow: '0 8px 24px rgba(0, 0, 0, 0.1)',\r\n        color: '#333',\r\n        textAlign: 'center',\r\n    }}\r\n>\r\n    <Typography\r\n        variant=\"h4\"\r\n        sx={{\r\n            mb: 2,\r\n            color: '#007BFF',\r\n            fontWeight: 'bold',\r\n            letterSpacing: '1px',\r\n            fontFamily: 'Roboto, sans-serif',\r\n        }}\r\n    >\r\n        Vende tus Tokens y Obtén un Depósito Directo\r\n    </Typography>\r\n\r\n    <Typography\r\n        variant=\"h6\"\r\n        sx={{\r\n            mb: 4,\r\n            color: '#555',\r\n            fontWeight: 'normal',\r\n            fontFamily: 'Roboto, sans-serif',\r\n            fontStyle: 'italic',\r\n        }}\r\n    >\r\n        Puenteando la Brecha en Finanzas Digitales\r\n    </Typography>\r\n\r\n    <Typography\r\n        variant=\"body1\"\r\n        sx={{\r\n            mb: 3,\r\n            color: '#444',\r\n            fontFamily: 'Roboto, sans-serif',\r\n            lineHeight: 1.6,\r\n            maxWidth: '800px',\r\n            mx: 'auto',\r\n        }}\r\n    >\r\n        En NextCryptoATM, utilizamos tecnología blockchain de vanguardia para facilitar transacciones seguras y sin problemas en diversas redes, incluyendo Ethereum, Bitcoin y Avalanche. Nuestra plataforma te permite vender tus criptomonedas de forma sencilla y obtener un depósito directo en tu cuenta.\r\n    </Typography>\r\n\r\n    <Typography\r\n        variant=\"body1\"\r\n        sx={{\r\n            mb: 3,\r\n            color: '#444',\r\n            fontFamily: 'Roboto, sans-serif',\r\n            lineHeight: 1.6,\r\n            maxWidth: '800px',\r\n            mx: 'auto',\r\n        }}\r\n    >\r\n        Vender criptomonedas a fiat nunca ha sido tan fácil. A través de nuestro sistema de intercambio P2P, puedes realizar transacciones directamente con otros usuarios, garantizando seguridad y transparencia. Nuestro servicio de custodia asegura que tus activos estén protegidos durante todo el proceso.\r\n    </Typography>\r\n\r\n    <Typography\r\n        variant=\"body1\"\r\n        sx={{\r\n            mb: 4,\r\n            color: '#444',\r\n            fontFamily: 'Roboto, sans-serif',\r\n            lineHeight: 1.6,\r\n            maxWidth: '800px',\r\n            mx: 'auto',\r\n        }}\r\n    >\r\n        Únete a nosotros y revoluciona la manera en que interactúas con los activos digitales, haciendo que las finanzas sean accesibles, seguras y eficientes.\r\n    </Typography>\r\n\r\n    <Divider sx={{ my: 4, bgcolor: '#007BFF', height: 2 }} />\r\n\r\n    <Box\r\n        sx={{\r\n            display: 'flex',\r\n            overflowX: 'auto',\r\n            scrollBehavior: 'smooth',\r\n            justifyContent: 'center',\r\n            width: '100%',\r\n            '&::-webkit-scrollbar': { display: 'none' },\r\n        }}\r\n    >\r\n        <Box\r\n            className=\"logos-container\"\r\n            sx={{\r\n                display: 'flex',\r\n                transition: 'transform 0.5s ease-in-out',\r\n                width: 'max-content',\r\n            }}\r\n        >\r\n            {pairs.map((pair) => (\r\n                <Box\r\n                    key={pair.value}\r\n                    sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        p: 2,\r\n                        borderRadius: '12px',\r\n                        background: 'rgba(0, 123, 255, 0.1)',\r\n                        boxShadow: '0 0 20px rgba(0, 123, 255, 0.2)',\r\n                        transition: 'transform 0.3s ease, box-shadow 0.3s ease',\r\n                        '&:hover': {\r\n                            transform: 'scale(1.1)',\r\n                            boxShadow: '0 0 30px rgba(0, 123, 255, 0.5)',\r\n                        },\r\n                        mx: 1,\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={pair.logo}\r\n                        alt={pair.label}\r\n                        style={{\r\n                            maxWidth: '60px',\r\n                            height: 'auto',\r\n                            objectFit: 'contain',\r\n                        }}\r\n                    />\r\n                </Box>\r\n            ))}\r\n        </Box>\r\n    </Box>\r\n</Box>\r\n</Box>\r\n\r\n\r\n\r\n{/* SECCION 3 */}\r\n\r\n<Divider sx={{ my: 10, bgcolor: '#ddd', height: 2 }} />\r\n            <Box\r\n                sx={{\r\n                    padding: 4,\r\n                    backgroundColor: '#ffffff',\r\n                    borderRadius: 12,\r\n                    boxShadow: '0 8px 24px rgba(0, 0, 0, 0.1)',\r\n                    transition: 'transform 0.3s ease',\r\n                    '&:hover': {\r\n                        transform: 'scale(1.02)',\r\n                    },\r\n                }}\r\n            >\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                        mb: 4,\r\n                        color: '#333',\r\n                        fontWeight: '700',\r\n                        letterSpacing: '1px',\r\n                    }}\r\n                >\r\n                    Nuestra Tecnología\r\n                </Typography>\r\n                \r\n                <Grid container spacing={4} alignItems=\"center\" sx={{ mb: 8 }}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                position: 'relative',\r\n                            }}\r\n                        >\r\n                            <img\r\n                                src={web3Img}\r\n                                alt=\"Web 3.0\"\r\n                                style={{\r\n                                    maxWidth: '90%',\r\n                                    height: 'auto',\r\n                                    borderRadius: '16px',\r\n                                    boxShadow: '0 6px 30px rgba(33, 150, 243, 0.3)',\r\n                                    transition: 'transform 0.3s ease',\r\n                                    position: 'relative',\r\n                                    zIndex: 1,\r\n                                }}\r\n                            />\r\n                            <Box\r\n                                sx={{\r\n                                    position: 'absolute',\r\n                                    top: '0',\r\n                                    left: '0',\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    borderRadius: '16px',\r\n                                    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n                                    backdropFilter: 'blur(12px)',\r\n                                    zIndex: 0,\r\n                                    transition: 'transform 0.3s ease',\r\n                                    '&:hover': {\r\n                                        transform: 'scale(1.05)',\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            sx={{\r\n                                mb: 2,\r\n                                color: '#2196F3',\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                        >\r\n                            Sistema de Pagos Descentralizado\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"body1\"\r\n                            sx={{\r\n                                color: '#444',\r\n                                lineHeight: 1.6,\r\n                            }}\r\n                        >\r\n                            Nuestra tecnología se basa en blockchain para ofrecer un sistema de pagos descentralizado que garantiza transparencia, seguridad y eficiencia. Utilizamos contratos inteligentes y la infraestructura de Web 3.0 para permitir transacciones directas entre usuarios sin intermediarios, reduciendo costos y aumentando la velocidad de las transacciones.\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Divider sx={{ my: 4, bgcolor: '#333', height: 2 }} />\r\n                \r\n                <Grid container spacing={4} alignItems=\"center\" sx={{ mb: 8 }}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            sx={{\r\n                                mb: 2,\r\n                                color: '#2196F3',\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                        >\r\n                            Cómo Funciona una Wallet Crypto Basada en RPC\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"body1\"\r\n                            sx={{\r\n                                color: '#444',\r\n                                lineHeight: 1.6,\r\n                            }}\r\n                        >\r\n                            Una wallet crypto basada en RPC (Remote Procedure Call) permite interactuar con la blockchain de manera segura. Al usar RPC, la wallet se comunica con un nodo de la blockchain para realizar operaciones como consultar el saldo, enviar transacciones o recibir notificaciones de eventos. Este enfoque ofrece una capa adicional de seguridad y descentralización, asegurando que las transacciones se realicen de manera eficiente y confiable.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                position: 'relative',\r\n                            }}\r\n                        >\r\n                            <img\r\n                                src={require('../assets/wallet.png')}\r\n                                alt=\"Wallet Crypto RPC\"\r\n                                style={{\r\n                                    maxWidth: '90%',\r\n                                    height: 'auto',\r\n                                    borderRadius: '16px',\r\n                                    boxShadow: '0 6px 30px rgba(33, 150, 243, 0.3)',\r\n                                    transition: 'transform 0.3s ease',\r\n                                    position: 'relative',\r\n                                    zIndex: 1,\r\n                                }}\r\n                            />\r\n                            <Box\r\n                                sx={{\r\n                                    position: 'absolute',\r\n                                    top: '0',\r\n                                    left: '0',\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    borderRadius: '16px',\r\n                                    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n                                    backdropFilter: 'blur(12px)',\r\n                                    zIndex: 0,\r\n                                    transition: 'transform 0.3s ease',\r\n                                    '&:hover': {\r\n                                        transform: 'scale(1.05)',\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n              {/* SECCION 4 */}\r\n                \r\n<Divider sx={{ my: 4, bgcolor: '#333', height: 2 }} />\r\n    <Grid container spacing={4} alignItems=\"center\">\r\n        <Grid item xs={12} md={6}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <img\r\n                    src={blockchainImg}\r\n                    alt=\"Blockchain Technology\"\r\n                    style={{ maxWidth: '100%', height: 'auto', borderRadius: '12px', boxShadow: '0 6px 12px rgba(0, 255, 200, 0.3)', transition: 'transform 0.3s ease', '&:hover': { transform: 'scale(1.05)' } }}\r\n                />\r\n            </Box>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" sx={{ mb: 2, color: '#2196F3', fontWeight: 'bold', fontFamily: 'Roboto, sans-serif' }}>\r\n                Por qué usar Blockchain\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ color: '#000', fontFamily: 'Roboto, sans-serif' }}>\r\n                La tecnología blockchain asegura que todas las transacciones sean inmutables y accesibles públicamente, ofreciendo un registro confiable y auditable de todas las actividades. Esto no solo proporciona una capa adicional de seguridad, sino que también fomenta una mayor confianza entre los participantes del sistema.\r\n            </Typography>\r\n        </Grid>\r\n    </Grid>\r\n</Box>\r\n\r\n\r\n\r\n{/* SECCION 5 */}\r\n\r\n<Divider sx={{ my: 10, bgcolor: '#ddd', height: 2 }} />\r\n<Box\r\n    sx={{\r\n        textAlign: 'center',\r\n        background: 'linear-gradient(180deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.15) 100%)',\r\n        padding: 4,\r\n        borderRadius: 8,\r\n        boxShadow: '0 6px 12px rgba(0, 0, 0, 0.15)',\r\n    }}\r\n>\r\n    <Typography variant=\"h4\" sx={{ mb: 4, color: '#007BFF', fontWeight: 'bold' }}>\r\n        Cómo Funciona NextCryptoATM\r\n    </Typography>\r\n\r\n    <Typography variant=\"h6\" sx={{ mb: 4, color: '#555', fontWeight: 'normal', fontStyle: 'italic' }}>\r\n        Facilitando el Intercambio de Criptomonedas\r\n    </Typography>\r\n\r\n    <Box\r\n        sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexWrap: 'wrap',\r\n            gap: 4,\r\n        }}\r\n    >\r\n        {[\r\n            {\r\n                title: 'Quiénes Somos',\r\n                content: 'En NextCryptoATM, somos un equipo dinámico dedicado a transformar los pagos electrónicos mediante soluciones innovadoras en criptomonedas. Nuestra experiencia en tecnología blockchain nos permite ofrecer sistemas de pago seguros, eficientes y de vanguardia.',\r\n                details: 'Combinamos habilidades financieras y tecnológicas para estar a la vanguardia de los avances en la industria.'\r\n            },\r\n            {\r\n                title: 'Nuestra Misión',\r\n                content: 'Crear un ecosistema financiero donde las transacciones de criptomonedas sean fluidas y accesibles. Buscamos eliminar las barreras de entrada y empoderar a los usuarios con herramientas avanzadas para la adopción global de las monedas digitales.',\r\n                details: 'Desarrollamos plataformas intuitivas que hacen que las transacciones en criptomonedas sean confiables para todos.'\r\n            },\r\n            {\r\n                title: 'Nuestra Visión',\r\n                content: 'Un futuro donde las criptomonedas sean parte integral de las transacciones diarias, impulsando la inclusión financiera y la innovación. Nos esforzamos por hacer que las monedas digitales sean comunes en la vida cotidiana.',\r\n                details: 'Nos enfocamos en crear soluciones prácticas que faciliten el uso generalizado de las monedas digitales.'\r\n            },\r\n            {\r\n                title: 'Nuestra Pasión',\r\n                content: 'Apasionados por la tecnología y el blockchain, estamos comprometidos a revolucionar los pagos con soluciones avanzadas. Nuestra búsqueda de progreso asegura productos y servicios excepcionales.',\r\n                details: 'Exploramos nuevas ideas y tecnologías para mejorar nuestras ofertas y mantener el liderazgo en la industria.'\r\n            }\r\n        ].map((card, index) => (\r\n            <Card\r\n                key={index}\r\n                sx={{\r\n                    maxWidth: 345,\r\n                    textAlign: 'center',\r\n                    borderRadius: 4,\r\n                    boxShadow: '0 6px 16px rgba(0, 0, 0, 0.1)',\r\n                    bgcolor: '#ffffff',\r\n                    transition: 'transform 0.3s ease, box-shadow 0.3s ease',\r\n                    '&:hover': {\r\n                        transform: 'scale(1.05)',\r\n                        boxShadow: '0 8px 24px rgba(0, 0, 0, 0.2)',\r\n                    },\r\n                }}\r\n            >\r\n                <CardContent>\r\n                    <Typography variant=\"h6\" sx={{ mb: 2, color: '#007BFF', fontWeight: 'bold' }}>\r\n                        {card.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: '#444', mb: 2 }}>\r\n                        {card.content}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: '#666' }}>\r\n                        {card.details}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        ))}\r\n    </Box>\r\n</Box>\r\n\r\n\r\n\r\n{/* SECCION 6 */}\r\n\r\n\r\n<Divider sx={{ my: 10, bgcolor: '#ddd', height: 2 }} />\r\n<Box\r\n    sx={{\r\n        padding: 4,\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: 8,\r\n        boxShadow: '0 6px 12px rgba(0, 0, 0, 0.2)',\r\n    }}\r\n>\r\n    <Typography\r\n        variant=\"h4\"\r\n        sx={{\r\n            textAlign: 'center',\r\n            mb: 2,\r\n            color: '#333',\r\n            fontWeight: '600',\r\n            letterSpacing: '1.5px',\r\n        }}\r\n    >\r\n        Trading View en NextCryptoATM\r\n    </Typography>\r\n\r\n    <Typography\r\n        variant=\"body1\"\r\n        sx={{\r\n            textAlign: 'center',\r\n            mb: 4,\r\n            color: '#555',\r\n            fontSize: '1.1rem',\r\n            lineHeight: 1.6,\r\n        }}\r\n    >\r\n        En nuestra plataforma, utilizamos TradingView para ofrecerte análisis de tendencias del mercado de criptomonedas. Con gráficos interactivos y herramientas de análisis, puedes tomar decisiones informadas sobre tus inversiones.\r\n    </Typography>\r\n\r\n    <Typography\r\n        variant=\"body1\"\r\n        sx={{\r\n            textAlign: 'center',\r\n            mb: 4,\r\n            color: '#555',\r\n            fontSize: '1.1rem',\r\n            lineHeight: 1.6,\r\n        }}\r\n    >\r\n        Para utilizar TradingView en NextCryptoATM, simplemente selecciona la criptomoneda que deseas analizar, y verás el gráfico correspondiente. Puedes personalizar los indicadores y el intervalo de tiempo para ajustar tu análisis a tus necesidades.\r\n    </Typography>\r\n\r\n    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mb: 4 }}>\r\n        <iframe\r\n            src=\"https://www.tradingview.com/widgetembed/?frameElementId=tradingview_12345&symbol=ETHUSD&interval=D&studies=[]&theme=Light&style=1\"\r\n            width=\"80%\"\r\n            height=\"400\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"no\"\r\n            allow=\"encrypted-media\"\r\n            title=\"Trading View\"\r\n            style={{\r\n                borderRadius: '12px',\r\n                boxShadow: '0 6px 12px rgba(0, 0, 0, 0.2)',\r\n            }}\r\n        ></iframe>\r\n    </Box>\r\n\r\n    <Typography\r\n        variant=\"body2\"\r\n        sx={{\r\n            textAlign: 'center',\r\n            color: '#777',\r\n            mb: 2,\r\n            fontSize: '0.95rem',\r\n            lineHeight: 1.5,\r\n        }}\r\n    >\r\n        * Recuerda que este análisis es solo informativo. Evalúa todos los factores antes de invertir.\r\n    </Typography>\r\n\r\n    <Typography\r\n        variant=\"body2\"\r\n        sx={{\r\n            textAlign: 'center',\r\n            color: '#007BFF',\r\n            fontSize: '0.95rem',\r\n            lineHeight: 1.5,\r\n        }}\r\n    >\r\n        Para más información y herramientas, visita nuestra sección de <a href=\"/resources\" style={{ color: '#007BFF', textDecoration: 'underline' }}>recursos</a>.\r\n    </Typography>\r\n</Box>\r\n\r\n\r\n{/* SECCION 7*/}\r\n\r\n<Divider sx={{ my: 10, bgcolor: '#ddd', height: 2 }} />\r\n            <Box\r\n                sx={{\r\n                    padding: 4,\r\n                    backgroundColor: '#ffffff', \r\n                    borderRadius: 4,\r\n                    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.1)',\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    sx={{\r\n                        mb: 2,\r\n                        color: '#333',\r\n                        fontWeight: 'bold',\r\n                        letterSpacing: '1px',\r\n                    }}\r\n                >\r\n                    ¡Gracias por visitar!\r\n                </Typography>\r\n\r\n                <Typography variant=\"body2\" sx={{ mb: 4, color: '#666' }}>\r\n                    Mantente al tanto de nuestras actualizaciones y noticias sobre el mercado.\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mb: 4 }}>\r\n                    <IconButton\r\n                        component=\"a\"\r\n                        href=\"https://www.twitter.com\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        aria-label=\"Twitter\"\r\n                        sx={{ color: '#1DA1F2', '&:hover': { transform: 'scale(1.1)' } }}\r\n                    >\r\n                        <TwitterIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        component=\"a\"\r\n                        href=\"https://www.facebook.com\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        aria-label=\"Facebook\"\r\n                        sx={{ color: '#1877F2', '&:hover': { transform: 'scale(1.1)' } }}\r\n                    >\r\n                        <FacebookIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        component=\"a\"\r\n                        href=\"https://www.linkedin.com\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        aria-label=\"LinkedIn\"\r\n                        sx={{ color: '#0A66C2', '&:hover': { transform: 'scale(1.1)' } }}\r\n                    >\r\n                        <LinkedInIcon />\r\n                    </IconButton>\r\n                </Box>\r\n\r\n                <Grid container spacing={4} justifyContent=\"center\" sx={{ mb: 4 }}>\r\n                    {[\r\n                        'Contacto',\r\n                        'Desarrolladores',\r\n                        'Soporte',\r\n                        'Política de Privacidad',\r\n                        'Blog',\r\n                        'Términos de Servicio',\r\n                        'FAQs',\r\n                        'Carreras',\r\n                    ].map((item) => (\r\n                        <Grid item key={item}>\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                    cursor: 'pointer',\r\n                                    color: '#007BFF',\r\n                                    '&:hover': {\r\n                                        textDecoration: 'underline',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                {item}\r\n                            </Typography>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n\r\n                <Typography variant=\"body2\" sx={{ mt: 3, color: '#999' }}>\r\n                    © {new Date().getFullYear()} Tu Empresa. Todos los derechos reservados.\r\n                </Typography>\r\n            </Box>\r\n</main>\r\n</div>\r\n);\r\n};\r\n\r\nexport default Nextmain;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Typography, Box, Button, TextField, Grid, Alert, Container, CircularProgress } from '@mui/material';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport RefreshIcon from '@mui/icons-material/Refresh'; \r\nimport { useHistory } from 'react-router-dom';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst VerifyToken = () => {\r\n    const [formValues, setFormValues] = useState({ token: '' });\r\n    const { verifyToken, error } = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [localError, setLocalError] = useState(null); \r\n    const history = useHistory();\r\n    const isMounted = useRef(true);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        };\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setFormValues({ ...formValues, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const storedEmail = localStorage.getItem('email');\r\n        if (!storedEmail) {\r\n            setLocalError('No se encontró el correo electrónico. Por favor, asegúrate de que estés autenticado.'); // Mensaje de error si no se encuentra el correo\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setTimeout(async () => {\r\n            try {\r\n                const response = await verifyToken({ email: storedEmail, ...formValues });\r\n                if (isMounted.current && response?.msg === 'Logged in!') {\r\n                    history.push('/');\r\n                }\r\n            } catch (err) {\r\n            } finally {\r\n                if (isMounted.current) setLoading(false);\r\n            }\r\n        }, 2000);\r\n    };\r\n\r\n    const handleResend = () => {\r\n        history.push('/resendtoken');\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 2 }}>\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    padding: 3,\r\n                    borderRadius: 2,\r\n                    boxShadow: '0 0 25px rgba(0, 123, 255, 0.6)',\r\n                    bgcolor: 'background.paper',\r\n                    border: '1px solid #ddd',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    animation: 'glow 1.5s infinite alternate'\r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        width: 45,\r\n                        height: 50,\r\n                        clipPath: 'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)',\r\n                        bgcolor: '#2186EB',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        mb: 2,\r\n                    }}\r\n                >\r\n                    <ArrowDropDownIcon sx={{ color: 'white', fontSize: 50 }} />\r\n                </Box>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    BlockVault\r\n                </Typography>\r\n                <Typography variant=\"body1\" align=\"center\" sx={{ mb: 4, fontFamily: 'Arial, sans-serif' }}>\r\n                    Por favor, ingresa el token que recibiste en el correo electrónico\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Token\"\r\n                            variant=\"outlined\"\r\n                            name=\"token\"\r\n                            value={formValues.token}\r\n                            onChange={handleChange}\r\n                            required\r\n                            margin=\"normal\"\r\n                            InputProps={{ sx: { borderRadius: 2, border: '1px solid #ddd' } }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            fullWidth\r\n                            sx={{ borderRadius: 2 }} \r\n                            disabled={loading} \r\n                        >\r\n                            {loading ? (\r\n                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                    <CircularProgress size={20} sx={{ color: '#074EE7FF' }} />\r\n                                    <Typography sx={{ ml: 1, color: '#074EE7FF', fontSize: '0.875rem' }}>Verificando...</Typography>\r\n                                </Box>\r\n                            ) : 'Verificar'}\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box \r\n                            sx={{ \r\n                                display: 'flex', \r\n                                justifyContent: 'center', \r\n                                alignItems: 'center', \r\n                                mt: 2, \r\n                                cursor: 'pointer',\r\n                                textDecoration: 'underline', \r\n                                color: 'primary.main' \r\n                            }}\r\n                            onClick={handleResend} \r\n                        >\r\n                            <RefreshIcon sx={{ mr: 1 }} /> \r\n                            <Typography variant=\"body2\">Reenviar Token</Typography>\r\n                        </Box>\r\n                    </Grid>\r\n                    {localError && ( \r\n                        <Grid item xs={12}>\r\n                            <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                                {localError}\r\n                            </Alert>\r\n                        </Grid>\r\n                    )}\r\n                    {error && (\r\n                        <Grid item xs={12}>\r\n                            <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                                {error}\r\n                            </Alert>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default VerifyToken;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Alert,\r\n    Typography,\r\n    InputAdornment,\r\n    IconButton,\r\n    Avatar\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nfunction ChangePasswordComponent() {\r\n    const { changePassword, successMessage, error } = useAuth();\r\n\r\n    const [passwords, setPasswords] = useState({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmNewPassword: ''\r\n    });\r\n    \r\n    const [showPasswords, setShowPasswords] = useState({\r\n        currentPassword: false,\r\n        newPassword: false,\r\n        confirmNewPassword: false\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPasswords(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleTogglePasswordVisibility = (field) => {\r\n        setShowPasswords(prev => ({ ...prev, [field]: !prev[field] }));\r\n    };\r\n\r\n    const handleChangePassword = async () => {\r\n        if (passwords.newPassword !== passwords.confirmNewPassword) {\r\n            alert('Las nuevas contraseñas no coinciden.');\r\n            return;\r\n        }\r\n        await changePassword(passwords);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '16px' }}>\r\n                <Avatar style={{ backgroundColor: '#1976D2', width: '48px', height: '48px' }}>\r\n                    <LockIcon />\r\n                </Avatar>\r\n                <Typography variant=\"h6\" component=\"h2\" style={{ marginTop: '8px', fontWeight: 'bold' }}>\r\n                    Cambiar Contraseña\r\n                </Typography>\r\n            </div>\r\n            <form noValidate autoComplete=\"off\" style={{ display: 'flex', flexDirection: 'column', gap: '16px', maxWidth: '420px', margin: '0 auto' }}>\r\n                {['currentPassword', 'newPassword', 'confirmNewPassword'].map((field) => (\r\n                    <TextField\r\n                        key={field}\r\n                        name={field}\r\n                        label={field === 'currentPassword' ? 'Contraseña Actual' : field === 'newPassword' ? 'Nueva Contraseña' : 'Confirmar Contraseña'}\r\n                        type={showPasswords[field] ? 'text' : 'password'}\r\n                        variant=\"outlined\"\r\n                        value={passwords[field]}\r\n                        onChange={handleChange}\r\n                        required\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label={`toggle ${field} visibility`}\r\n                                        onClick={() => handleTogglePasswordVisibility(field)}\r\n                                    >\r\n                                        {showPasswords[field] ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                ))}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleChangePassword}\r\n                    style={{ marginTop: '16px' }}\r\n                >\r\n                    Cambiar Contraseña\r\n                </Button>\r\n                {successMessage && <Alert severity=\"success\" style={{ marginTop: '16px' }}>{successMessage}</Alert>}\r\n                {error && <Alert severity=\"error\" style={{ marginTop: '16px' }}>{error}</Alert>}\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChangePasswordComponent;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\nimport User from '../services/user';\r\nimport useAuth from '../hooks/useAuth';\r\nimport {\r\n  Switch,\r\n  FormControlLabel,\r\n  Typography,\r\n  Box,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Paper,\r\n  Snackbar\r\n} from '@mui/material';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst TwoFactorAuthComponent = () => {\r\n  const { auth } = useContext(AuthContext);\r\n  const { updateTokenStatus, error, setError } = useAuth();\r\n\r\n  const [isTokenEnabled, setIsTokenEnabled] = useState(() => localStorage.getItem('isTokenEnabled') === 'true');\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchTokenStatus = async () => {\r\n      if (!auth) return;\r\n      try {\r\n        const { data } = await User.getInfo();\r\n        if (data?.data) {\r\n          const { isTokenEnabled } = data.data;\r\n          setIsTokenEnabled(isTokenEnabled);\r\n          localStorage.setItem('isTokenEnabled', isTokenEnabled);\r\n        } else {\r\n          setError(data.error);\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    fetchTokenStatus();\r\n  }, [auth, setError]);\r\n\r\n  const toggleTwoFactorAuth = () => {\r\n    if (isTokenEnabled) {\r\n      setShowWarning(true);\r\n      setConfirmDialogOpen(true);\r\n    } else {\r\n      updateTokenStatusAndLocalStorage(true);\r\n    }\r\n  };\r\n\r\n  const updateTokenStatusAndLocalStorage = async (newStatus) => {\r\n    try {\r\n      await updateTokenStatus({ email: auth.email, isTokenEnabled: newStatus });\r\n      setIsTokenEnabled(newStatus);\r\n      localStorage.setItem('isTokenEnabled', newStatus);\r\n\r\n      if (newStatus) {\r\n        setShowWarning(false); \r\n        setSnackbar({ open: true, message: \"Autenticación de dos factores activada.\", severity: \"success\" });\r\n      } else {\r\n        setShowWarning(true); \r\n        setSnackbar({ open: true, message: \"Autenticación de dos factores desactivada.\", severity: \"success\" });\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleConfirmDialogClose = (confirm) => {\r\n    setConfirmDialogOpen(false);\r\n    if (confirm) {\r\n      updateTokenStatusAndLocalStorage(false);\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => setSnackbar((prev) => ({ ...prev, open: false }));\r\n\r\n  useEffect(() => {\r\n    if (snackbar.open) {\r\n      const timer = setTimeout(handleCloseSnackbar, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [snackbar.open]);\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ padding: 3, borderRadius: 2, maxWidth: 400, margin: 'auto' }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        2FA Auth\r\n      </Typography>\r\n      <FormControlLabel\r\n        control={<Switch checked={isTokenEnabled} onChange={toggleTwoFactorAuth} color=\"primary\" />}\r\n        label={\r\n          isTokenEnabled\r\n            ? <span style={{ display: 'flex', alignItems: 'center' }}>\r\n                Desactivar <CheckCircleIcon style={{ color: 'green', marginLeft: 4, fontSize: '1.2rem' }} />\r\n              </span>\r\n            : 'Activar'\r\n        }\r\n      />\r\n      {isTokenEnabled && <Typography variant=\"body2\" style={{ color: 'green' }}>La autenticación de dos factores está activa.</Typography>}\r\n      {showWarning && (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', color: 'red', marginBottom: 1 }}>\r\n          <WarningIcon sx={{ marginRight: 1 }} />\r\n          <Typography variant=\"body2\">Desactivar la autenticación de dos factores pone en riesgo tu cuenta.</Typography>\r\n        </Box>\r\n      )}\r\n\r\n      <Dialog open={confirmDialogOpen} onClose={() => handleConfirmDialogClose(false)} PaperProps={{ sx: { margin: 'auto' } }}>\r\n        <DialogTitle>Confirmar Desactivación</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>¿Estás seguro de que deseas desactivar la autenticación de dos factores? Esto pone en riesgo tu cuenta a cibercriminales.</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleConfirmDialogClose(false)} color=\"error\" variant=\"contained\">Cancelar</Button>\r\n          <Button onClick={() => handleConfirmDialogClose(true)} color=\"primary\" variant=\"contained\">Desactivar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleCloseSnackbar} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}>\r\n        <MuiAlert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>{snackbar.message}</MuiAlert>\r\n      </Snackbar>\r\n\r\n      {error && (\r\n        <Snackbar open={true} autoHideDuration={6000} onClose={() => setError(null)}>\r\n          <MuiAlert elevation={6} variant=\"filled\" onClose={() => setError(null)} severity=\"error\">{error}</MuiAlert>\r\n        </Snackbar>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TwoFactorAuthComponent;\r\n","// i18n.js\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources: {\r\n            en: {\r\n                translation: {\r\n                    total_balance: \"Total Balance\",\r\n                    language_selection: \"Language Selection\",\r\n                    language: \"Language\",\r\n                    address: \"Address\",\r\n                    balance: \"Balance\",\r\n                    view_details: \"View Details\",\r\n                    account: \"Account\",\r\n                    welcome: \"Welcome, {{firstName}} {{lastName}}\",\r\n                    deposit: \"Deposit\",\r\n                    withdraw: \"Withdraw\",\r\n                    security: \"Security\",\r\n                    my_wallets: \"My Wallets\",\r\n                    account_security: \"The security of your account is our priority. Make sure to enable two-factor authentication.\",\r\n                    crypto_potential: \"With cryptocurrencies, you can save and earn more returns. Discover the potential of your money!\",\r\n                    p2p_service: \"Use our P2P service to sell your tokens for fiat quickly and securely.\",\r\n                    blockchain_revolution: \"Blockchain is a revolutionary technology that enables secure and transparent transactions.\",\r\n                    password_security: \"Remember that keeping your passwords secure and unique is essential.\",\r\n                    crypto_wallet_services: \"Our crypto wallet services are designed to provide you with maximum security and ease of use.\",\r\n                    p2p_exchange_service: \"Our P2P exchange service allows you to transact directly with other users.\",\r\n                    // Nuevos textos traducibles\r\n                    account_security_message: \"The security of your account is our priority. Make sure to enable two-factor authentication.\",\r\n                    crypto_potential_message: \"With cryptocurrencies, you can save and earn more returns. Discover the potential of your money!\",\r\n                    p2p_service_message: \"Use our P2P service to sell your tokens for fiat quickly and securely.\",\r\n                    blockchain_revolution_message: \"Blockchain is a revolutionary technology that enables secure and transparent transactions.\",\r\n                    password_security_message: \"Remember that keeping your passwords secure and unique is essential.\",\r\n                    crypto_wallet_services_message: \"Our crypto wallet services are designed to provide you with maximum security and ease of use.\",\r\n                    p2p_exchange_service_message: \"Our P2P exchange service allows you to transact directly with other users.\",\r\n                    total_balance_title: \"Total Balance\",\r\n                    total_balance_amount: \"balance of all your cryptocurrencies\",\r\n                    wallets_link_text: \"Select Wallet\",\r\n                    // Wallets texts\r\n                    p2p_service_wallets: \"Use our P2P service to buy and sell tokens directly between users.\",\r\n                    rpc_description: \"The RPC (Remote Procedure Call) is the communication channel between your wallet and the blockchain.\",\r\n                    password_security_wallets: \"Remember that keeping your passwords secure and unique is essential.\",\r\n                    evm_wallet_description: \"Our EVM-based crypto wallet is designed to provide you with security and ease of use.\",\r\n                    deposit_button: \"DEPOSIT\",\r\n                    withdraw_button: \"WITHDRAW\",\r\n                    back_button: \"BACK\",\r\n                    your_wallets_title: \"Your Wallets\",\r\n                    // Nuevos textos agregados\r\n                    insufficient_funds: \"Insufficient funds\",\r\n                    loading: \"Loading...\",\r\n                    address_copied: \"Address copied!\",\r\n                    copy: \"Copy\",\r\n                    deposits: \"Deposits\",\r\n                    withdrawals: \"Withdrawals\",\r\n                    amount_to_withdraw: \"Amount to withdraw...\",\r\n                    commission: \"Fee: {{fee}} {{coin}}\",\r\n                    create_wallet: \"CREATE WALLET FOR {{walletId}} NOW\",\r\n                    address_placeholder: \"Address {{network}}...\",\r\n                    your_address: \"Your address for {{coin}} ({{network}})\",\r\n                    // Nuevos textos traducibles\r\n                    user_profile: \"Profile\",\r\n                    change_password: \"Password\",\r\n                    two_factor_auth: \"2FA\",\r\n                    language_selector: \"Language\",\r\n                    verify_email: \"Email\",\r\n                    settings_title: \"Settings\",\r\n                    go_back: \"Go Back\",\r\n                },\r\n            },\r\n            es: {\r\n                translation: {\r\n                    total_balance: \"Balance Total\",\r\n                    language_selection: \"Selección de Idioma\",\r\n                    language: \"Idioma\",\r\n                    address: \"Dirección\",\r\n                    balance: \"Balance\",\r\n                    view_details: \"Ver Detalles\",\r\n                    account: \"Cuenta\",\r\n                    welcome: \"Bienvenido, {{firstName}} {{lastName}}\",\r\n                    deposit: \"Depositar\",\r\n                    withdraw: \"Retirar\",\r\n                    security: \"Seguridad\",\r\n                    my_wallets: \"Mis Wallet\",\r\n                    account_security: \"La seguridad de tu cuenta es nuestra prioridad. Asegúrate de habilitar la autenticación de dos factores.\",\r\n                    crypto_potential: \"Con las criptomonedas, puedes ahorrar y obtener más rendimientos. ¡Descubre el potencial de tu dinero!\",\r\n                    p2p_service: \"Utiliza nuestro servicio P2P para vender tus tokens por fiat de manera rápida y segura.\",\r\n                    blockchain_revolution: \"La blockchain es una tecnología revolucionaria que permite transacciones seguras y transparentes.\",\r\n                    password_security: \"Recuerda que mantener tus contraseñas seguras y únicas es fundamental.\",\r\n                    crypto_wallet_services: \"Nuestros servicios de crypto wallet están diseñados para ofrecerte la máxima seguridad y facilidad de uso.\",\r\n                    p2p_exchange_service: \"Nuestro servicio de intercambio P2P te permite realizar transacciones directamente con otros usuarios.\",\r\n                    // Nuevos textos traducibles\r\n                    account_security_message: \"La seguridad de tu cuenta es nuestra prioridad. Asegúrate de habilitar la autenticación de dos factores.\",\r\n                    crypto_potential_message: \"Con las criptomonedas, puedes ahorrar y obtener más rendimientos. ¡Descubre el potencial de tu dinero!\",\r\n                    p2p_service_message: \"Utiliza nuestro servicio P2P para vender tus tokens por fiat de manera rápida y segura.\",\r\n                    blockchain_revolution_message: \"La blockchain es una tecnología revolucionaria que permite transacciones seguras y transparentes.\",\r\n                    password_security_message: \"Recuerda que mantener tus contraseñas seguras y únicas es fundamental.\",\r\n                    crypto_wallet_services_message: \"Nuestros servicios de crypto wallet están diseñados para ofrecerte la máxima seguridad y facilidad de uso.\",\r\n                    p2p_exchange_service_message: \"Nuestro servicio de intercambio P2P te permite realizar transacciones directamente con otros usuarios.\",\r\n                    total_balance_title: \"Balance Total\",\r\n                    total_balance_amount: \"total de todas tus criptomonedas\",\r\n                    wallets_link_text: \"Selecciona una wallet\",\r\n                    // Wallets texts\r\n                    p2p_service_wallets: \"Utiliza nuestro servicio P2P para comprar y vender tokens directamente entre usuarios.\",\r\n                    rpc_description: \"El RPC (Remote Procedure Call) es el canal de comunicación entre tu wallet y la blockchain.\",\r\n                    password_security_wallets: \"Recuerda que mantener tus contraseñas seguras y únicas es fundamental.\",\r\n                    evm_wallet_description: \"Nuestra crypto wallet basada en tecnología EVM está diseñada para brindarte seguridad, facilidad de uso.\",\r\n                    deposit_button: \"DEPOSITAR\",\r\n                    withdraw_button: \"RETIRAR\",\r\n                    back_button: \"REGRESAR\",\r\n                    your_wallets_title: \"Tus Billeteras\",\r\n                    // Nuevos textos agregados\r\n                    insufficient_funds: \"Fondos insuficientes\",\r\n                    loading: \"Cargando...\",\r\n                    address_copied: \"Dirección copiada!\",\r\n                    copy: \"Copiar\",\r\n                    deposits: \"Depósitos\",\r\n                    withdrawals: \"Retiros\",\r\n                    amount_to_withdraw: \"Monto a retirar...\",\r\n                    commission: \"Comisión: {{fee}} {{coin}}\",\r\n                    address_placeholder: \"Dirección {{network}}...\",\r\n                    create_wallet: \"CREAR BILLETERA PARA {{walletId}} AHORA\",\r\n                    your_address: \"Tu dirección de {{coin}} ({{network}})\",\r\n                    // Nuevos textos traducibles\r\n                    user_profile: \"Perfil\",\r\n                    change_password: \"Contraseña\",\r\n                    two_factor_auth: \"2FA\",\r\n                    language_selector: \"Idioma\",\r\n                    verify_email: \"Email\",\r\n                    settings_title: \"Configuración\",\r\n                    go_back: \"Regresar\",\r\n                },\r\n            },\r\n        },\r\n        lng: 'es', \r\n        fallbackLng: 'en',\r\n        interpolation: {\r\n            escapeValue: false,\r\n        },\r\n    });\r\n\r\nexport default i18n;\r\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport i18n from '../i18n'; \r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n    const [language, setLanguage] = useState('es'); \r\n\r\n    useEffect(() => {\r\n        const savedLanguage = localStorage.getItem('language');\r\n        if (savedLanguage) {\r\n            setLanguage(savedLanguage);\r\n            i18n.changeLanguage(savedLanguage); \r\n        } else {\r\n            localStorage.setItem('language', 'es'); \r\n            i18n.changeLanguage('es');\r\n        }\r\n    }, []);\r\n\r\n    const handleLanguageChange = (lng) => {\r\n        setLanguage(lng);\r\n        i18n.changeLanguage(lng);\r\n        localStorage.setItem('language', lng); \r\n    };\r\n\r\n    return (\r\n        <LanguageContext.Provider value={{ language, handleLanguageChange }}>\r\n            {children}\r\n        </LanguageContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useLanguage = () => useContext(LanguageContext);\r\n","import React, { useEffect } from 'react';\r\nimport { Box, Typography, FormControl, InputLabel, Select, MenuItem, Chip } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check'; \r\nimport { useLanguage } from '../hooks/LanguageContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../i18n';\r\n\r\nfunction LanguageSelectorComponent() {\r\n    const { language, handleLanguageChange } = useLanguage();\r\n    const { t } = useTranslation();\r\n\r\n    const languageOptions = {\r\n        es: 'Español',\r\n        en: 'English',\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedLanguage = localStorage.getItem('language');\r\n        if (savedLanguage) {\r\n            handleLanguageChange(savedLanguage);\r\n            i18n.changeLanguage(savedLanguage);\r\n        }\r\n    }, [handleLanguageChange]);\r\n\r\n    const handleChange = (event) => {\r\n        const newLanguage = event.target.value;\r\n        handleLanguageChange(newLanguage);\r\n        i18n.changeLanguage(newLanguage);\r\n        localStorage.setItem('language', newLanguage);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                mt: 4,\r\n                p: 3,\r\n                bgcolor: 'white',\r\n                borderRadius: 1,\r\n                boxShadow: 3,\r\n                maxWidth: 320,\r\n                mx: 'auto',\r\n                border: '1px solid #e0e0e0',\r\n            }}\r\n        >\r\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                {t('language_selection')}\r\n            </Typography>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"language-select-label\">{t('language')}</InputLabel>\r\n                <Select\r\n                    labelId=\"language-select-label\"\r\n                    id=\"language-select\"\r\n                    value={language}\r\n                    onChange={handleChange}\r\n                    label={t('language')}\r\n                >\r\n                    {Object.entries(languageOptions).map(([key, value]) => (\r\n                        <MenuItem key={key} value={key}>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                {language === key && <CheckIcon sx={{ color: 'green', fontSize: 'medium' }} />} {/* Check más grande */}\r\n                                <Chip label={value} variant=\"outlined\" size=\"small\" />\r\n                            </Box>\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LanguageSelectorComponent;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Alert,\r\n    Avatar\r\n} from '@mui/material';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport useAuth from '../hooks/useAuth';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\n\r\nfunction UserProfileComponent() {\r\n    const { updateUserProfile, error, successMessage } = useAuth();\r\n    const { auth } = useContext(AuthContext);\r\n    \r\n    const [firstName, setFirstName] = useState(auth.firstName || '');\r\n    const [lastName, setLastName] = useState(auth.lastName || '');\r\n    const [email, setEmail] = useState(auth.email || '');\r\n    const [localError, setLocalError] = useState('');\r\n    const [localSuccessMessage, setLocalSuccessMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (auth) {\r\n            setFirstName(auth.firstName || '');\r\n            setLastName(auth.lastName || '');\r\n            setEmail(auth.email || '');\r\n        }\r\n    }, [auth]);\r\n\r\n    const handleUpdateProfile = async () => {\r\n        setLocalError('');\r\n        setLocalSuccessMessage('');\r\n\r\n        if (!firstName || !lastName || !email) {\r\n            setLocalError('Todos los campos son obligatorios.');\r\n            return;\r\n        }\r\n\r\n        const body = { firstName, lastName, email };\r\n        await updateUserProfile(body);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (successMessage) {\r\n            setLocalSuccessMessage(successMessage);\r\n        }\r\n        if (error) {\r\n            setLocalError(error);\r\n        }\r\n    }, [successMessage, error]);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '16px' }}>\r\n                <Avatar style={{ backgroundColor: '#1976D2', width: '48px', height: '48px' }}>\r\n                    <PersonIcon />\r\n                </Avatar>\r\n                <Typography variant=\"h6\" component=\"h2\" style={{ marginTop: '8px', fontWeight: 'bold' }}>\r\n                    Perfil de Usuario\r\n                </Typography>\r\n            </div>\r\n            <form noValidate autoComplete=\"off\" style={{ display: 'flex', flexDirection: 'column', gap: '16px', maxWidth: '400px', margin: '0 auto' }}>\r\n                <TextField\r\n                    label=\"Primer Nombre\"\r\n                    variant=\"outlined\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    required\r\n                />\r\n                <TextField\r\n                    label=\"Apellido\"\r\n                    variant=\"outlined\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                    required\r\n                />\r\n                <TextField\r\n                    label=\"Correo Electrónico\"\r\n                    variant=\"outlined\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleUpdateProfile}\r\n                    style={{ marginTop: '16px' }}\r\n                >\r\n                    Actualizar Perfil\r\n                </Button>\r\n                {localSuccessMessage && (\r\n                    <Alert severity=\"success\" style={{ marginTop: '16px' }}>\r\n                        {localSuccessMessage}\r\n                    </Alert>\r\n                )}\r\n                {localError && (\r\n                    <Alert severity=\"error\" style={{ marginTop: '16px' }}>\r\n                        {localError}\r\n                    </Alert>\r\n                )}\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserProfileComponent;\r\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\r\nimport { Alert, Typography, CircularProgress, Button, Snackbar } from '@mui/material'; \r\nimport { AuthContext } from '../hooks/AuthContext'; \r\nimport useAuth from '../hooks/useAuth'; \r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst VerifyEmailComponent = () => {\r\n    const { auth } = useContext(AuthContext); \r\n    const { sendVerificationEmail, isEmailVerified, error } = useAuth(); \r\n\r\n    const [verificationStatus, setVerificationStatus] = useState(null);\r\n    const [loading, setLoading] = useState(true); \r\n    const [localError, setLocalError] = useState(null);\r\n    const [emailVerified, setEmailVerified] = useState(false);\r\n    const [hasCheckedVerification, setHasCheckedVerification] = useState(false); \r\n    const [sending, setSending] = useState(false); \r\n    const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: '' });\r\n\r\n    useEffect(() => {\r\n        const checkEmailVerification = async () => {\r\n            setLocalError(null); \r\n            try {\r\n                const isVerified = await isEmailVerified(); \r\n\r\n                if (isVerified) {\r\n                    setVerificationStatus({\r\n                        verified: true,\r\n                        message: 'Correo electrónico verificado',\r\n                    });\r\n                    setEmailVerified(true);\r\n                } else {\r\n                    setVerificationStatus({\r\n                        verified: false,\r\n                        message: 'El correo electrónico no está verificado.',\r\n                    });\r\n                    setEmailVerified(false);\r\n                }\r\n            } catch (err) {\r\n                setLocalError(err.message || 'Error al verificar el correo.');\r\n                setVerificationStatus(null); \r\n            } finally {\r\n                setLoading(false); \r\n                setHasCheckedVerification(true); \r\n            }\r\n        };\r\n\r\n        if (auth && auth.email && !hasCheckedVerification) {\r\n            checkEmailVerification(); \r\n        } else if (!auth || !auth.email) {\r\n            setLocalError('No se ha encontrado un correo electrónico autenticado.');\r\n            setLoading(false); \r\n        }\r\n    }, [auth, isEmailVerified, hasCheckedVerification]); \r\n\r\n    const handleSendVerificationEmail = async () => {\r\n        if (auth && auth.email) {\r\n            setSending(true); \r\n            try {\r\n                await sendVerificationEmail(auth.email);\r\n                setSnackbar({ open: true, message: \"Correo de verificación enviado.\", severity: \"success\" });\r\n            } catch (error) {\r\n                setLocalError(error.message || 'Error al enviar el correo de verificación.');\r\n                setSnackbar({ open: true, message: localError, severity: \"error\" });\r\n            } finally {\r\n                setSending(false); \r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCloseSnackbar = useCallback(() => {\r\n        setSnackbar(prev => ({ ...prev, open: false }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (snackbar.open) {\r\n            const timer = setTimeout(handleCloseSnackbar, 4000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [snackbar.open, handleCloseSnackbar]);\r\n\r\n    return (\r\n        <>\r\n            <Typography \r\n                variant=\"h4\" \r\n                gutterBottom \r\n                sx={{ \r\n                    fontWeight: 'bold', \r\n                    color: '#333', \r\n                    textAlign: 'center', \r\n                    padding: 2,\r\n                    fontSize: { xs: '1.5rem', sm: '2rem' } \r\n                }}\r\n            >\r\n                Verificar Correo Electrónico\r\n            </Typography>\r\n            <Typography \r\n                variant=\"body1\" \r\n                gutterBottom \r\n                sx={{ \r\n                    color: '#555', \r\n                    textAlign: 'center', \r\n                    maxWidth: '400px', \r\n                    margin: '0 auto', \r\n                    fontSize: { xs: '0.9rem', sm: '1rem' } \r\n                }}\r\n            >\r\n                Correo electrónico autenticado: <strong>{auth?.email || 'Correo no disponible'}</strong>\r\n            </Typography>\r\n            {loading ? (\r\n                <CircularProgress sx={{ display: 'block', margin: '20px auto', color: '#1976d2' }} />\r\n            ) : (\r\n                <>\r\n                    {localError && (\r\n                        <Alert \r\n                            severity=\"error\" \r\n                            sx={{ \r\n                                mt: 3, \r\n                                borderRadius: '8px', \r\n                                backgroundColor: '#f44336', \r\n                                color: '#fff', \r\n                                fontWeight: 'bold', \r\n                                textAlign: 'center', \r\n                                maxWidth: '400px', \r\n                                margin: '0 auto' \r\n                            }}\r\n                        >\r\n                            {localError}\r\n                        </Alert>\r\n                    )}\r\n                    {verificationStatus && (\r\n                        <Alert \r\n                            severity={verificationStatus.verified ? 'success' : 'warning'} \r\n                            sx={{ \r\n                                mt: 3, \r\n                                borderRadius: '8px', \r\n                                backgroundColor: verificationStatus.verified ? '#4caf50' : '#ff9800', \r\n                                color: '#fff', \r\n                                fontWeight: 'bold', \r\n                                textAlign: 'center', \r\n                                maxWidth: '400px', \r\n                                margin: '0 auto' \r\n                            }}\r\n                        >\r\n                            {verificationStatus.message}\r\n                        </Alert>\r\n                    )}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleSendVerificationEmail}\r\n                        disabled={emailVerified || sending} \r\n                        sx={{ \r\n                            display: 'block', \r\n                            margin: '20px auto', \r\n                            padding: '10px 20px', \r\n                            fontSize: { xs: '14px', sm: '16px' }, \r\n                            borderRadius: '20px', \r\n                            maxWidth: '200px' \r\n                        }}\r\n                    >\r\n                        {sending ? <CircularProgress size={24} color=\"inherit\" /> : (emailVerified ? 'Verificado' : 'Enviar Correo')}\r\n                    </Button>\r\n                </>\r\n            )}\r\n            <Snackbar open={snackbar.open} autoHideDuration={4000} onClose={handleCloseSnackbar}>\r\n                <MuiAlert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n                    {snackbar.message}\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            {error && (\r\n                <Alert \r\n                    severity=\"error\" \r\n                    sx={{ \r\n                        mb: 2, \r\n                        borderRadius: '8px', \r\n                        backgroundColor: '#f44336', \r\n                        color: '#fff', \r\n                        fontWeight: 'bold', \r\n                        textAlign: 'center', \r\n                        maxWidth: '400px', \r\n                        margin: '0 auto' \r\n                    }}\r\n                >\r\n                    {error}\r\n                </Alert>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VerifyEmailComponent;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next'; // Importar useTranslation\r\nimport ChangePasswordComponent from './ChangePasswordComponent';\r\nimport TwoFactorAuthComponent from './TwoFactorAuthComponent';\r\nimport LanguageSelectorComponent from './LanguageSelectorComponent';\r\nimport UserProfileComponent from './UserProfileComponent'; \r\nimport VerifyEmailComponent from './VerifyEmailComponent'; \r\nimport { \r\n    Box, \r\n    Paper, \r\n    List, \r\n    ListItem, \r\n    ListItemIcon, \r\n    ListItemText, \r\n    Typography, \r\n    Divider, \r\n    useTheme, \r\n    useMediaQuery \r\n} from '@mui/material';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'; \r\nimport SettingsIcon from '@mui/icons-material/Settings'; \r\nimport { Link } from 'react-router-dom';\r\n\r\nconst sections = [\r\n    { id: 'userProfile', label: 'user_profile', icon: <PersonIcon /> },\r\n    { id: 'changePassword', label: 'change_password', icon: <LockIcon /> },\r\n    { id: 'twoFactorAuth', label: 'two_factor_auth', icon: <SecurityIcon /> },\r\n    { id: 'languageSelector', label: 'language_selector', icon: <LanguageIcon /> },\r\n    { id: 'verifyEmail', label: 'verify_email', icon: <SecurityIcon /> },\r\n];\r\n\r\nconst renderSection = (selectedSection) => {\r\n    switch (selectedSection) {\r\n        case 'userProfile': return <UserProfileComponent />;\r\n        case 'changePassword': return <ChangePasswordComponent />;\r\n        case 'twoFactorAuth': return <TwoFactorAuthComponent />;\r\n        case 'languageSelector': return <LanguageSelectorComponent />;\r\n        case 'verifyEmail': return <VerifyEmailComponent />;\r\n        default: return null;\r\n    }\r\n};\r\n\r\nfunction Settings() {\r\n    const { t } = useTranslation(); \r\n    const [selectedSection, setSelectedSection] = useState('userProfile');\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <Box \r\n            sx={{ \r\n                mt: 4, \r\n                display: 'flex', \r\n                minHeight: '80vh', \r\n                width: '100%', \r\n                mx: isMobile ? 0 : 'auto'\r\n            }}\r\n        >\r\n            <Paper elevation={6} sx={{ borderRadius: 2, overflow: 'hidden', display: 'flex', width: '100%' }}>\r\n                <Box sx={{ width: isMobile ? '17%' : '20%', bgcolor: theme.palette.grey[200] }}>\r\n                    <List>\r\n                        {sections.map(({ id, label, icon }) => (\r\n                            <ListItem\r\n                                button\r\n                                key={id}\r\n                                onClick={() => setSelectedSection(id)}\r\n                                selected={selectedSection === id}\r\n                                sx={{\r\n                                    bgcolor: selectedSection === id ? theme.palette.primary.light : 'transparent',\r\n                                    '&:hover': {\r\n                                        bgcolor: theme.palette.primary.main,\r\n                                        color: '#FFFFFF',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <ListItemIcon sx={{ fontSize: isMobile ? 20 : 24 }}>{icon}</ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={t(label)} \r\n                                    sx={{\r\n                                        display: isMobile ? 'none' : 'block',\r\n                                        overflow: 'hidden',\r\n                                        textOverflow: 'ellipsis',\r\n                                        whiteSpace: 'nowrap',\r\n                                        typography: 'body2',\r\n                                        fontSize: isMobile ? '0.875rem' : '1rem',\r\n                                    }}\r\n                                />\r\n                            </ListItem>\r\n                        ))}\r\n                        <ListItem\r\n                            button\r\n                            component={Link}\r\n                            to=\"/\"\r\n                            sx={{\r\n                                marginTop: 'auto', \r\n                                '&:hover': {\r\n                                    bgcolor: theme.palette.primary.main,\r\n                                    color: '#FFFFFF',\r\n                                },\r\n                            }}\r\n                        >\r\n                            <ListItemIcon sx={{ fontSize: isMobile ? 20 : 24 }}><ArrowBackIcon /></ListItemIcon>\r\n                            <ListItemText\r\n                                primary={t('go_back')} \r\n                                sx={{\r\n                                    display: isMobile ? 'none' : 'block',\r\n                                    overflow: 'hidden',\r\n                                    textOverflow: 'ellipsis',\r\n                                    whiteSpace: 'nowrap',\r\n                                    typography: 'body2',\r\n                                    fontSize: isMobile ? '0.875rem' : '1rem',\r\n                                }}\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </Box>\r\n                <Box sx={{ flexGrow: 1, p: 2 }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <SettingsIcon sx={{ fontSize: isMobile ? 30 : 40, mr: 1, mb: 0.5 }} />\r\n                        <Typography \r\n                            variant={isMobile ? 'h5' : 'h4'} \r\n                            component=\"h1\" \r\n                            gutterBottom \r\n                            sx={{ lineHeight: '40px', fontSize: isMobile ? '1.5rem' : '2rem' }} \r\n                        >\r\n                            {t('settings_title')} \r\n                        </Typography>\r\n                    </Box>\r\n                    <Divider sx={{ mb: 2 }} />\r\n                    {renderSection(selectedSection)}\r\n                </Box>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Container, Typography, Box, Grid, Alert } from '@mui/material';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport useAuth from '../hooks/useAuth'; \r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ResendTokenForm = () => {\r\n    const { resendToken, error, successMessage } = useAuth();\r\n    const [email, setEmail] = useState('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (successMessage === 'Código de verificación reenviado a tu correo electrónico.') {\r\n            history.push('/verifytoken');\r\n        }\r\n    }, [successMessage, history]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await resendToken({ email });\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 2 }}>\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    padding: 3,\r\n                    borderRadius: 2,\r\n                    boxShadow: '0 0 25px rgba(0, 123, 255, 0.6)',\r\n                    bgcolor: 'background.paper',\r\n                    border: '1px solid #ddd',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    animation: 'glow 1.5s infinite alternate'\r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        width: 45,\r\n                        height: 50,\r\n                        clipPath: 'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)',\r\n                        bgcolor: '#2186EB',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        mb: 2,\r\n                    }}\r\n                >\r\n                    <ArrowDropDownIcon sx={{ color: 'white', fontSize: 50 }} />\r\n                </Box>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    BlockVault\r\n                </Typography>\r\n                <Typography variant=\"body1\" align=\"center\" sx={{ mb: 4, fontFamily: 'Arial, sans-serif' }}>\r\n                    Ingresa tu correo electrónico para reenviar el código de verificación\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            label=\"Correo Electrónico\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                            InputProps={{ sx: { borderRadius: 2, border: '1px solid #ddd' } }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            sx={{ borderRadius: 2 }}\r\n                        >\r\n                            Reenviar Código\r\n                        </Button>\r\n                    </Grid>\r\n                    {error && (\r\n                        <Grid item xs={12}>\r\n                            <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                                {error}\r\n                            </Alert>\r\n                        </Grid>\r\n                    )}\r\n                    {successMessage && (\r\n                        <Grid item xs={12}>\r\n                            <Alert severity=\"success\" sx={{ mt: 2 }}>\r\n                                {successMessage}\r\n                            </Alert>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ResendTokenForm;\r\n","import React, { useContext, useState } from 'react';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\nimport User from '../services/user';\r\nimport { Button, Typography, Dialog, DialogTitle, DialogContent, Box, Paper } from '@mui/material';\r\n\r\nconst EmailVerificationComponent = () => {\r\n    const { auth } = useContext(AuthContext);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [dialogMessage, setDialogMessage] = useState('');\r\n    const [showCloseMessage, setShowCloseMessage] = useState(false);\r\n\r\n    const verifyEmail = async (email) => {\r\n        try {\r\n            const { data } = await User.verifyEmail({ email });\r\n            if (data && data.message === 'Correo electrónico verificado con éxito.') {\r\n                handleVerificationResult({ verified: true, message: `✔️ ${data.message}` });\r\n            } else {\r\n                handleVerificationResult({ verified: false, message: data.error || 'Error al verificar el correo electrónico.' });\r\n            }\r\n        } catch (err) {\r\n            handleVerificationResult({ verified: false, message: err.message });\r\n        }\r\n    };\r\n\r\n    const handleVerifyClick = () => {\r\n        if (auth && auth.email) {\r\n            verifyEmail(auth.email);\r\n        } else {\r\n            handleVerificationResult({ verified: false, message: 'No se encontró el correo electrónico autenticado.' });\r\n        }\r\n    };\r\n\r\n    const handleVerificationResult = (result) => {\r\n        setDialogMessage(result.message);\r\n        setOpenDialog(true);\r\n        setShowCloseMessage(false); \r\n\r\n        if (result.verified) {\r\n            setTimeout(() => {\r\n                setOpenDialog(false);\r\n                setShowCloseMessage(true); \r\n            }, 5000); \r\n        }\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n        setShowCloseMessage(true);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: '100vh',\r\n                bgcolor: '#f6f8fa', \r\n                padding: 3,\r\n                textAlign: 'center',\r\n            }}\r\n        >\r\n            <Paper elevation={3} sx={{ padding: 3, borderRadius: 2, maxWidth: 400, width: '100%', backgroundColor: 'white' }}>\r\n                {!showCloseMessage ? (\r\n                    <>\r\n                        <Typography variant=\"h4\" gutterBottom sx={{ fontSize: '2rem', fontWeight: 'bold', color: '#333' }}>\r\n                            Verificar Correo Electrónico\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleVerifyClick}\r\n                            sx={{ mt: 3, fontSize: '1.2rem', padding: '10px 20px', backgroundColor: '#0366d6', '&:hover': { backgroundColor: '#005cc5' } }} // Colores de GitHub\r\n                        >\r\n                            Enviar Correo de Verificación\r\n                        </Button>\r\n\r\n                        <Dialog\r\n                            open={openDialog}\r\n                            onClose={handleCloseDialog}\r\n                            PaperProps={{\r\n                                sx: {\r\n                                    padding: 3,\r\n                                    textAlign: 'center',\r\n                                    borderRadius: 2,\r\n                                    bgcolor: 'background.paper',\r\n                                },\r\n                            }}\r\n                        >\r\n                            <DialogTitle>Estado de Verificación</DialogTitle>\r\n                            <DialogContent\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <Typography variant=\"body1\" sx={{ mt: 2, color: '#333' }}>\r\n                                    {dialogMessage}\r\n                                </Typography>\r\n                            </DialogContent>\r\n                        </Dialog>\r\n                    </>\r\n                ) : (\r\n                    <Typography variant=\"body2\" sx={{ mt: 2, color: 'text.secondary', fontSize: '1.1rem' }}>\r\n                        Puedes cerrar esta ventana.\r\n                    </Typography>\r\n                )}\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EmailVerificationComponent;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Box, TextField, Button, Typography, List, ListItem, Paper } from '@mui/material';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\nimport useProviders from '../hooks/useProviders';\r\n\r\nconst ChatComponent = () => {\r\n  const [messageContent, setMessageContent] = useState('');\r\n  const [chatId, setChatId] = useState(null);\r\n  const { messages, sendMessage, getMessages } = useProviders();\r\n  const { auth } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async (chatId) => {\r\n      await getMessages(chatId);\r\n    };\r\n\r\n    const chatData = JSON.parse(localStorage.getItem('chatData'));\r\n    if (chatData) {\r\n      setChatId(chatData.chat.chatId);\r\n      fetchMessages(chatData.chat.chatId);\r\n    }\r\n  }, [getMessages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!messageContent.trim()) return;\r\n    await sendMessage(auth.email, chatId, messageContent);\r\n    setMessageContent('');\r\n    await getMessages(chatId);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 3, maxWidth: 600, margin: 'auto' }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Chat\r\n      </Typography>\r\n      <Paper sx={{ maxHeight: 400, overflow: 'auto', marginBottom: 2, padding: 2 }}>\r\n        <List>\r\n          {messages.map((message, index) => (\r\n            <ListItem\r\n              key={index}\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: message.sender === auth.email ? 'flex-end' : 'flex-start',\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: message.sender === auth.email ? '#e0f7fa' : '#f1f8e9',\r\n                  color: message.sender === auth.email ? '#00796b' : '#33691e',\r\n                  borderRadius: 2,\r\n                  padding: 1,\r\n                  maxWidth: '70%',\r\n                }}\r\n              >\r\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n                  {message.sender === auth.email ? 'You' : message.sender}\r\n                </Typography>\r\n                <Typography variant=\"body2\">{message.message}</Typography>\r\n              </Box>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n      <TextField\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        label=\"Escribe tu mensaje\"\r\n        value={messageContent}\r\n        onChange={(e) => setMessageContent(e.target.value)}\r\n        onKeyPress={(e) => {\r\n          if (e.key === 'Enter') {\r\n            handleSendMessage();\r\n          }\r\n        }}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage} sx={{ marginTop: 2 }}>\r\n        Enviar\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Box, TextField, Button, Typography, List, ListItem, Paper } from '@mui/material';\r\nimport { AuthContext } from '../hooks/AuthContext';\r\nimport useProviders from '../hooks/useProviders';\r\n\r\nconst ProviderChatComponent = () => {\r\n    const { auth } = useContext(AuthContext);\r\n    const { getChatDetailsByEmail, getMessages, sendMessageAsProvider, error, messages } = useProviders();\r\n    const [chatId, setChatId] = useState(null);\r\n    const [messageContent, setMessageContent] = useState('');\r\n    const [fetchError, setFetchError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async (chatId) => {\r\n            if (!chatId) return;\r\n            try {\r\n                await getMessages(chatId);\r\n            } catch (err) {\r\n                setFetchError(err.message);\r\n            }\r\n        };\r\n\r\n        const fetchChatDetails = async () => {\r\n            try {\r\n                const chatDetails = await getChatDetailsByEmail(auth.email);\r\n                if (chatDetails && chatDetails.chatId) {\r\n                    if (chatId !== chatDetails.chatId) {\r\n                        setChatId(chatDetails.chatId);\r\n                        localStorage.setItem('chatData', JSON.stringify({ chat: chatDetails }));\r\n                        fetchMessages(chatDetails.chatId);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                setFetchError(err.message);\r\n            }\r\n        };\r\n\r\n        if (!chatId) {\r\n            fetchChatDetails();\r\n        }\r\n\r\n        const intervalId = setInterval(() => {\r\n            if (chatId && messages.length > 0) {\r\n                fetchMessages(chatId);\r\n            }\r\n        }, 2000); // Ejecutar cada 2 segundos\r\n\r\n        return () => clearInterval(intervalId);\r\n        \r\n    }, [auth.email, chatId, messages.length, getChatDetailsByEmail, getMessages]); \r\n\r\n    const handleSendMessage = async () => {\r\n        try {\r\n            if (!messageContent.trim() || !chatId) return;\r\n            await sendMessageAsProvider(auth.email, chatId, messageContent);\r\n            setMessageContent('');\r\n            await getMessages(chatId);\r\n        } catch (err) {\r\n            setFetchError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ padding: 3, maxWidth: 600, margin: 'auto' }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n                Chat Room\r\n            </Typography>\r\n            {error && <Typography color=\"error\">{error.message}</Typography>}\r\n            {fetchError && <Typography color=\"error\">{fetchError}</Typography>}\r\n            <Paper sx={{ maxHeight: 400, overflow: 'auto', marginBottom: 2, padding: 2 }}>\r\n                <List>\r\n                    {messages.length === 0 ? (\r\n                        <Typography variant=\"body1\">Aún no hay mensajes</Typography>\r\n                    ) : (\r\n                        messages.map((message, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: message.sender === auth.email ? 'flex-end' : 'flex-start',\r\n                                }}\r\n                            >\r\n                                <Box\r\n                                    sx={{\r\n                                        backgroundColor: message.sender === auth.email ? '#e0f7fa' : '#f1f8e9',\r\n                                        color: message.sender === auth.email ? '#00796b' : '#33691e',\r\n                                        borderRadius: 2,\r\n                                        padding: 1,\r\n                                        maxWidth: '70%',\r\n                                    }}\r\n                                >\r\n                                    <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n                                        {message.sender === auth.email ? 'You' : message.sender}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">{message.message}</Typography>\r\n                                </Box>\r\n                            </ListItem>\r\n                        ))\r\n                    )}\r\n                </List>\r\n            </Paper>\r\n            <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Escribe tu mensaje\"\r\n                value={messageContent}\r\n                onChange={(e) => setMessageContent(e.target.value)}\r\n                onKeyPress={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        handleSendMessage();\r\n                    }\r\n                }}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage} sx={{ marginTop: 2 }}>\r\n                Enviar\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ProviderChatComponent;","import React from 'react'\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport { AuthContext } from './hooks/AuthContext'\r\nimport useFindUser from './hooks/useFindUser'\r\n\r\nimport Login from \"./pages/Login\"\r\nimport { Box, Container, CssBaseline, Toolbar } from '@mui/material'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport PublicRoute from './components/PublicRoute'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport Register from './pages/Register'\r\nimport Navbar from './components/Navbar'\r\nimport Home from './components/Home'\r\nimport Wallets from './pages/Wallets'\r\nimport Wallet from './pages/Wallet'\r\nimport WelcomeTemplate from './pages/welcometemplate'\r\nimport ProvidersList from './pages/List'\r\nimport CreateProvider from './pages/Create';\r\nimport Nextmain from './pages/Nextmain'\r\nimport VerifyToken from './components/verify-token'\r\nimport Settings from './components/Settings'\r\nimport ResendTokenForm from './components/ResendTokenForm'\r\nimport EmailVerificationComponent from './components/verify'\r\nimport { LanguageProvider } from './hooks/LanguageContext';\r\nimport './i18n'; \r\nimport Chatcomponent from './components/Chat';\r\nimport ProviderChatComponent from './components/ProviderChatComponent';\r\n\r\n\r\nexport default function App() {\r\n    const { auth, setAuth, loading } = useFindUser();\r\n    const mdTheme = createTheme();\r\n\r\n    return (\r\n        <Router>\r\n            <AuthContext.Provider value={{ auth, setAuth, loading }}>\r\n                <LanguageProvider>\r\n                <ThemeProvider theme={mdTheme}>\r\n                    <Box sx={{ display: 'flex' }}>\r\n                        <CssBaseline />\r\n                        <Navbar />\r\n                        <Box\r\n                            component=\"main\"\r\n                            sx={{\r\n                                backgroundColor: (theme) =>\r\n                                    theme.palette.mode === 'light'\r\n                                        ? theme.palette.grey[100]\r\n                                        : theme.palette.grey[900],\r\n                                flexGrow: 1,\r\n                                height: '100vh',\r\n                                overflow: 'auto',\r\n                            }}\r\n                        >\r\n                            <Toolbar />\r\n                            <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                                <Switch>\r\n                                    <PrivateRoute exact path='/' component={Home} />\r\n                                    <PrivateRoute exact path=\"/wallets\" component={Wallets} />\r\n                                    <PrivateRoute exact path=\"/wallet/:walletId\" component={Wallet} />\r\n                                    <PrivateRoute exact path=\"/providers\" component={ProvidersList} />\r\n                                    <PrivateRoute exact path=\"/create\" component={CreateProvider} />\r\n                                    <PrivateRoute exact path='/welcome' component={WelcomeTemplate}/>\r\n                                    <PrivateRoute exact path='/settings' component={Settings}/>\r\n                                    <PrivateRoute exact path='/verifyemail' component={EmailVerificationComponent}/>\r\n                                    <PrivateRoute exact path='/chat' component={Chatcomponent}/>\r\n                                    <PrivateRoute exact path='/providerchat' component={ProviderChatComponent}/>\r\n                                    <PublicRoute exact path='/login' component={Login} />\r\n                                    <PublicRoute exact path='/register' component={Register} />\r\n                                    <PublicRoute exact path='/nextmain' component={Nextmain}/>\r\n                                    <PublicRoute exact path='/verifytoken' component={VerifyToken} />\r\n                                    <PublicRoute exact path='/resendtoken' component={ResendTokenForm}/>\r\n                                </Switch>\r\n                                \r\n                            </Container>\r\n                        </Box>\r\n                    </Box>\r\n                </ThemeProvider>\r\n                </LanguageProvider>\r\n            </AuthContext.Provider>\r\n        </Router>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport User from '../services/user'\r\n\r\nexport default function useFindUser() {\r\n    const [auth, setAuth] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function findUser() {\r\n            try {\r\n                const { data } = await User.getInfo()\r\n                if (data && 'data' in data)\r\n                    setAuth(data.data)\r\n            } catch (err) { }\r\n\r\n            setLoading(false);\r\n        }\r\n\r\n        findUser()\r\n    }, [])\r\n\r\n\r\n    return {\r\n        auth,\r\n        loading,\r\n        setAuth\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}